# Updates the Netdot database

use warnings;
use strict;
use lib "../lib";
use DBUTIL;
use Netdot;
use Data::Dumper;

my %CONFIG;
$CONFIG{debug}        = 1;
$CONFIG{CONFIG_DIR}   = "../etc";
$CONFIG{SCHEMA_FILE}  = "$CONFIG{CONFIG_DIR}/netdot.meta";
$CONFIG{DEFAULT_DATA} = "$CONFIG{CONFIG_DIR}/default_data";

my $netdot_config = Netdot::Config->new(config_dir => $CONFIG{CONFIG_DIR});
my $dbms = $netdot_config->get('DB_TYPE');
my $dbh = &dbconnect();

# Get the current schema version from DB
my ($schema_version) = $dbh->selectrow_array("SELECT version 
                                              FROM   schemainfo 
                                              WHERE  id=1;");

my @statements;

if ( $schema_version eq '1.0.1' ){

    print "Upgrading Netdot schema from version $schema_version\n";
    
    if ( $dbms eq 'mysql' ) {

	# Try to speed up the conversion as much as possible
	push @statements, 
	"SET FOREIGN_KEY_CHECKS = 0;",
	"SET AUTOCOMMIT = 0;";

	# Add a new unique constraint to avoid devices with same name. 
	# Requires renaming existing indexes to be consistent with newly generated 
	# schema in this version
	push @statements, 'ALTER TABLE device DROP INDEX `Device2`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device3`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device4`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device5`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device6`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device7`;';
	push @statements, 'ALTER TABLE device DROP INDEX `Device8`;';
	
	push @statements, 'ALTER TABLE device ADD UNIQUE INDEX `device2` (`name`);';

	push @statements, 'ALTER TABLE device ADD INDEX `Device3` (`used_by`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device4` (`owner`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device5` (`os`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device6` (`sysname`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device7` (`down_from`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device8` (`down_until`);';
	push @statements, 'ALTER TABLE device ADD INDEX `Device9` (`extension`);';

	# Restore checks
	push @statements, "SET FOREIGN_KEY_CHECKS = 1;", "COMMIT;";

    }elsif ( $dbms eq 'Pg' ){

	# IDs were erroneously created as "serial" instead of "bigserial"
	foreach my $table_name ( $dbh->tables('', 'public', '%', '') ){
	    push @statements, "ALTER TABLE $table_name ALTER COLUMN id TYPE bigint;";
	}
	
	# Add a new unique constraint to avoid devices with same name. 
	# Requires renaming existing indexes to be consistent with newly generated 
	# schema in this version
	push @statements, 'DROP INDEX "Device2";';
	push @statements, 'DROP INDEX "Device3";';
	push @statements, 'DROP INDEX "Device4";';
	push @statements, 'DROP INDEX "Device5";';
	push @statements, 'DROP INDEX "Device6";';
	push @statements, 'DROP INDEX "Device7";';
	push @statements, 'DROP INDEX "Device8";';

	push @statements, 'ALTER TABLE device ADD CONSTRAINT "device2" UNIQUE ("name");';

	push @statements, 'CREATE INDEX "Device3" on "device" ("used_by");';
	push @statements, 'CREATE INDEX "Device4" on "device" ("owner");';
	push @statements, 'CREATE INDEX "Device5" on "device" ("os");';
	push @statements, 'CREATE INDEX "Device6" on "device" ("sysname");';
	push @statements, 'CREATE INDEX "Device7" on "device" ("down_from");';
	push @statements, 'CREATE INDEX "Device8" on "device" ("down_until");';
	push @statements, 'CREATE INDEX "Device9" on "device" ("extension");';

    }else{
	die "Unsupported DB type: $dbms\n";
    }

    push @statements, "UPDATE schemainfo SET version='1.0.2' WHERE id=1;";

}else{
    die "Unsupported version for this upgrade: $schema_version\n";
}

&processdata(\@statements);

&dbdisconnect();

