#
# Netdot Metadata. 
#
# Metadata is kept as a Perl hash and contains information necessary to generate the 
# DB schema, to generate Class::DBI classes, and to help in 
# minimizing user interface code.
# 
# $meta = {
#'tables' => {
#  Table1 => {
#    columns => {
#      column1 => {  # DB name of this column
#        default => 'Default Value for this column',
#        description => 'Column1 blah blah blah',
#        length => 'SQL length of the column',
#
#        # Include this if this column is a foreign key:
#        linksto => { 
#          Behavior to take when the object pointed to by this column is deleted
#          cascade => 'Delete|Fail|Nullify',
#
#          Specify a column to order when calling the has_many method
#          order_by => 'column [DESC]'
# 
#          Name of this relationship from the perspective of the object pointed to
#          by this column.  Class::DBI creates a method with this name to retrieve
#          the 'has_many' objects
#          method => 'Method Name',
#          table => 'Foreign Table Name'
#        },
#
#        nullable => 0,   # can this column be set to null?
#        tag => undef,    # 
#        type => '[bool|date|integer|blob|numeric|varchar]' 
#	          The SQL data type of this column
#      },
#    description => 'Table1 blah blah blah', # Description for this table
#    has_history => 0,  # Should a history table (a clone of this one) be inserted as well?
#    index => [],       # Columns that should be indexed by the DBMS
#    isjoin => '0',     # Is this table a join table?
#
#    One or more columns to be used as a short identifier 
#    for each instance of this table:
#    label => [ 'column1', 'column2'  ],
#    primary_key => 'id',
#
#    Array of arrays of columns that should be marked as unique in the DB.
#    unique => [ [ 'column1' ] ],
#
#    Views contain subsets of columns to be displayed
#    For example, different views might be chosen depending on the type or object
#    views => {
#      all => [ 'column1', 'column2' ], 
#      brief => [ 'column1' ]
#    }
#  },
#
#
# 
#
# 
#
#

$meta = {
'tables' => {
  ArpCache => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      device => {
        default => '',
        description => 'Device where this Arp Cache was found',
        length => '',
        linksto => {
          cascade => 'Delete',
	  order_by => 'tstamp DESC',
          method => 'arp_caches',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      tstamp => {
        default => '1970-01-01 00:00:00',
        description => 'When this Cache was collected',
        length => '',
        nullable => 0,
        tag => 'Timestamp',
        type => 'timestamp'
      }
    },
    description => 'Device ARP Cache',
    has_history => 0,
    index => [ ['device'], ['tstamp'] ],
    isjoin => '0',
    label => [
      'tstamp',
      'device'
    ],
    primary_key => 'id',
    unique => [ ['device', 'tstamp'] ],
    views => {
      all => [
        'tstamp',
        'device'
      ],
      brief => [
        'tstamp',
        'device'
      ]
    }
  },
  ArpCacheEntry => {
    columns => {
      arpcache => {
        default => '',
        description => 'ARP Cache where this entry belongs',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'entries',
          table => 'ArpCache',
        },
        nullable => 0,
        tag => 'ARP Cache',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      interface => {
        default => '',
        description => 'Interface',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'arp_entries',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Interface',
        type => 'integer'
      },
      ipaddr => {
        default => '',
        description => 'IP address',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'arp_entries',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'IP',
        type => 'integer'
      },
      physaddr => {
        default => '',
        description => 'Physical Address (MAC)',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'arpentries',
          table => 'PhysAddr'
        },
        nullable => 0,
        tag => 'Physical Address',
        type => 'integer'
      }
    },
    description => 'ARP Cache Entry',
    has_history => 0,
    index => [ ['arpcache'], ['interface'], ['physaddr'], ['ipaddr'] ],
    isjoin => '0',
    label => [
      'ipaddr',
      'physaddr'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
	'interface',
        'ipaddr',
        'physaddr',
        'arpcache'
      ],
      brief => [
        'ipaddr',
        'physaddr',
      ]
    }
  },
  Availability => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => 'NULL',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Time period brief description. e.g. "24x7"',
        length => '128',
        nullable => 0,
        tag => 'Time Period',
        type => 'varchar'
      }
    },
    description => 'A Time Period',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  BGPPeering => {
    columns => {
      bgppeeraddr => {
        default => '',
        description => 'BGP Peer Address',
        length => '64',
        nullable => 1,
        tag => 'Peer Adress',
        type => 'varchar'
      },
      bgppeerid => {
        default => '',
        description => 'BGP Peer ID',
        length => '64',
        nullable => 1,
        tag => 'Peer ID',
        type => 'varchar'
      },
      device => {
        default => '',
        description => 'Device where BGP peering exists (the local device, that is)',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'bgppeers',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      entity => {
        default => '',
        description => 'Entity with which Peering Exists',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'bgppeers',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Entity',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      monitored => {
        default => '',
        description => 'Flag that specifies if this peering should be monitored',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'bool'
      },
      monitorstatus => {
        default => '',
        description => 'Monitoring Status of this Peering',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'bgppeers',
          table => 'MonitorStatus'
        },
        nullable => 0,
        tag => 'Monitored Status',
        type => 'integer'
      }
    },
    description => 'A BGP Peering',
    has_history => 0,
    index => [
      [
        'bgppeerid'
      ]
    ],
    isjoin => '0',
    label => [
      'device',
      'entity'
    ],
    primary_key => 'id',
    unique => [
      [
        'device',
        'bgppeeraddr'
      ]
    ],
    views => {
      all => [
        'device',
        'entity',
        'bgppeerid',
        'bgppeeraddr',
        'monitored',
        'monitorstatus'
      ],
      brief => [
        'device',
        'entity',
        'bgppeeraddr'
      ]
    }
  },
  BackboneCable => {
    columns => {
      end_closet => {
        default => '',
        description => 'Closet where this cable terminates',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'backbones_end',
          table => 'Closet'
        },
        nullable => 0,
        tag => 'Destination Closet',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      installdate => {
        default => '',
        description => 'Date when this Cable was first installed (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Installed on',
        type => 'date'
      },
      length => {
        default => '',
        description => 'The physical length of this cable (ft)',
        length => '32',
        nullable => 1,
        tag => 'Length (ft)',
        type => 'varchar'
      },
      name => {
        default => '',
        description => 'A name given to this cable.',
        length => '64',
        nullable => 0,
        tag => 'Cable ID',
        type => 'varchar'
      },
      owner => {
        default => '',
        description => 'Entity that owns this cable',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'cables',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Owned by',
        type => 'integer'
      },
      start_closet => {
        default => '',
        description => 'Closet where this cable originates',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'backbones_start',
          table => 'Closet'
        },
        nullable => 0,
        tag => 'Origin Closet',
        type => 'integer'
      },
      type => {
        default => '',
        description => 'The type of cable',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'backbonecables',
          table => 'CableType'
        },
        nullable => 0,
        tag => 'Cable Type',
        type => 'integer'
      }
    },
    description => 'A Backbone cable that interconnects two sites.  Backbone cables can have multiple strands.',
    has_history => 1,
    index => [
      [
        'name'
      ],
      [
        'start_closet'
      ],
      [
        'end_closet'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'type',
        'owner',
        'installdate',
        'start_closet',
        'end_closet',
        'length',
        'info'
      ],
      brief => [
        'name',
        'start_closet',
        'end_closet'
      ]
    }
  },
  CableStrand => {
    columns => {
      cable => {
        default => '',
        description => 'Cable to which this strand belongs',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'strands',
          table => 'BackboneCable'
        },
        nullable => 0,
        tag => 'Cable ID',
        type => 'integer'
      },
      circuit_id => {
        default => '',
        description => 'ID of the circuit which this strand is a part of',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'strands',
          table => 'Circuit'
        },
        nullable => 0,
        tag => 'Circuit',
        type => 'integer'
      },
      datetested => {
        default => '',
        description => 'Date that this strand was last tested (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Date Tested',
        type => 'date'
      },
      description => {
        default => '',
        description => 'A text description of this strand',
        length => '128',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      direction => {
        default => '',
        description => 'Does this strand transmit?',
        length => '',
        nullable => 0,
        tag => 'Transmit?',
        type => 'bool'
      },
      fiber_type => {
        default => '',
        description => 'The type of fiber that this strand is made of',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'strands',
          table => 'FiberType'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      loss => {
        default => '',
        description => 'Tested loss (dbm)',
        length => '32',
        nullable => 1,
        tag => 'Loss',
        type => 'varchar'
      },
      name => {
        default => '',
        description => 'A name for this strand',
        length => '64',
        nullable => 0,
        tag => 'Strand ID',
        type => 'varchar'
      },
      number => {
        default => '',
        description => 'The numeric order of this strand',
        length => '',
        nullable => 0,
        tag => 'Number',
        type => 'integer'
      },
      status => {
        default => '',
        description => 'Status of this strand',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'strands',
          table => 'StrandStatus'
        },
        nullable => 0,
        tag => 'Status',
        type => 'integer'
      }
    },
    description => 'A single cable strand/pair',
    has_history => 1,
    index => [
      [
        'cable'
      ],
      [
        'name'
      ],
      [
        'number'
      ],
      [
        'circuit_id'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'cable',
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'number',
        'cable',
        'status',
        'datetested',
        'loss',
        'direction',
        'fiber_type',
        'circuit_id',
        'description',
        'info'
      ],
      brief => [
        'name',
        'cable',
        'direction',
        'status'
      ]
    }
  },
  CableType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'The name of this cable type',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'Types of Cables',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Circuit => {
    columns => {
      cid => {
        default => '',
        description => 'ID of this circuit.',
        length => '128',
        nullable => 0,
        tag => 'Circuit ID',
        type => 'varchar'
      },
      linkid => {
        default => '',
        description => 'Site Link to which this circuit belongs',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'circuits',
          table => 'SiteLink'
        },
        nullable => 0,
        tag => 'Site Link',
        type => 'integer'
      },
      dlci => {
        default => '',
        description => 'Data Link Connection Identifier',
        length => '64',
        nullable => 1,
        tag => 'DLCI',
        type => 'varchar'
      },
      farend => {
        default => '',
        description => 'The remote (far) interface where this circuit terminates',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'farcircuits',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Far Interface',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      installdate => {
        default => '',
        description => 'Date when this circuit was installed (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Installed on',
        type => 'date'
      },
      nearend => {
        default => '',
        description => 'The local (near) interface where this circuit connects',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'nearcircuits',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Near Interface',
        type => 'integer'
      },
      speed => {
        default => '',
        description => 'The speed of this circuit (Mbps)',
        length => '32',
        nullable => 1,
        tag => 'Speed',
        type => 'varchar'
      },
      status => {
        default => '',
        description => 'Status of this circuit',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'circuits',
          table => 'CircuitStatus'
        },
        nullable => 0,
        tag => 'Status',
        type => 'integer'
      },
      type => {
        default => '',
        description => 'The type of this circuit',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'circuits',
          table => 'CircuitType'
        },
        nullable => 0,
        tag => 'Type',
        type => 'integer'
      },
      vendor => {
        default => '',
        description => 'Who provides this circuit, if it is not internal',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'circuits',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Provider',
        type => 'integer'
      }
    },
    description => 'A circuit can either be a WAN link provided by an external entity, or a set of [spliced] backbone cable strands terminated into two device interfaces',
    has_history => 1,
    index => [
      [
        'nearend'
      ],
      [
        'farend'
      ],
      [
        'linkid'
      ]
    ],
    isjoin => '0',
    label => [
      'cid'
    ],
    primary_key => 'id',
    unique => [
      [
        'vendor',
        'cid'
      ]
    ],
    views => {
      all => [
        'cid',
        'linkid',
        'status',
        'nearend',
        'farend',
        'type',
        'speed',
        'dlci',
        'installdate',
        'vendor',
        'info'
      ],
      brief => [
        'cid',
        'linkid',
        'nearend',
        'farend',
        'type',
        'vendor',
        'status'
      ]
    }
  },
  CircuitStatus => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Circuit Status',
        length => '128',
        nullable => 0,
        tag => 'Status',
        type => 'varchar'
      }
    },
    description => 'Circuit status',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  CircuitType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Circuit Type',
        length => '128',
        nullable => 0,
        tag => 'Type',
        type => 'varchar'
      }
    },
    description => 'Circuit Type',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Closet => {
    columns => {
      ot_blocks => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => '110 Blocks',
        type => 'varchar'
      },
      ss_blocks => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => '66 Blocks',
        type => 'varchar'
      },
      access_key_type => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Access Key Type',
        type => 'varchar'
      },
      asbestos_tiles => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Asbestos Tiles',
        type => 'bool'
      },
      catv_taps => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'CableTV Taps',
        type => 'varchar'
      },
      converted_patch_panels => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Converted Patch Panels',
        type => 'bool'
      },
      dimensions => {
        default => '',
        description => '',
        length => '64',
        nullable => 1,
        tag => 'Dimensions (")',
        type => 'varchar'
      },
      floor => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'closets',
          table => 'Floor'
        },
        nullable => 0,
        tag => 'Floor',
        type => 'integer'
      },
      ground_buss => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Ground Buss',
        type => 'bool'
      },
      hvac_type => {
        default => '',
        description => '',
        length => '255',
        nullable => 1,
        tag => 'HVAC Type',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'An identifier for this Closet within a Site',
        length => '32',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      number => {
        default => '',
        description => 'Equivalent to a Room Number',
        length => '32',
        nullable => 0,
        tag => 'Number',
        type => 'varchar'
      },
      outlets => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Outlets',
        type => 'varchar'
      },
      pair_count => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Pair Count',
        type => 'varchar'
      },
      patch_panels => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Patch Panels',
        type => 'varchar'
      },
      rack_type => {
        default => '',
        description => '',
        length => '255',
        nullable => 1,
        tag => 'Rack Type',
        type => 'varchar'
      },
      racks => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Racks',
        type => 'varchar'
      },
      ru_avail => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Rack Units Available',
        type => 'varchar'
      },
      shared_with => {
        default => '',
        description => '',
        length => '255',
        nullable => 1,
        tag => 'Shared With',
        type => 'varchar'
      },
      site => {
        default => '',
        description => 'Site where this Closet is located',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'closets',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Site',
        type => 'integer'
      },
      work_needed => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Work Needed',
        type => 'varchar'
      }
    },
    description => 'A Communications Closet.  A Closet is different from a normal Room in two ways: a) Backbone Cables (inter and intra building) terminate in Closets.  b) Horizontal Cables _start_ in Closets and _end_ in Rooms',
    has_history => 0,
    index => [
      [
        'name'
      ],
      [
        'site'
      ],
      [
        'number'
      ],
      [
        'floor'
      ]
    ],
    isjoin => '0',
    label => [
      'name',
      'site'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'name',
        'number',
        'site',
        'floor',
        'dimensions',
        'racks',
        'outlets',
        'ru_avail',
        'patch_panels',
        'ot_blocks',
        'ss_blocks',
        'catv_taps',
        'access_key_type',
        'work_needed',
        'shared_with',
        'hvac_type',
        'ground_buss',
        'asbestos_tiles',
        'rack_type',
        'pair_count',
        'converted_patch_panels',
        'info'
      ],
      brief => [
        'name',
        'number',
        'site',
        'floor'
      ]
    }
  },
  SiteLink => {
    columns => {
      entity => {
        default => '',
        description => 'External Entity which we connect to',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'links',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Entity',
        type => 'integer'
      },
      farend => {
        default => '',
        description => 'The remote Site for this Link',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'farlinks',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Destination (Site)',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'A name for this Link',
        length => '128',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      nearend => {
        default => '',
        description => 'The local Site for this Link',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'nearlinks',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Origin (Site)',
        type => 'integer'
      }
    },
    description => 'A Link between two Sites.  A Site Link can consist of one or more circuits',
    has_history => 1,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'entity',
        'nearend',
        'farend',
        'info'
      ],
      brief => [
        'name',
        'entity',
        'nearend',
        'farend'
      ]
    }
  },
  Contact => {
    columns => {
      contactlist => {
        default => '',
        description => 'The list or group of Contacts to which this Contact belongs',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'contacts',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      contacttype => {
        default => '',
        description => 'The type of this Contact',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'contacts',
          table => 'ContactType'
        },
        nullable => 0,
        tag => 'Type of Contact',
        type => 'integer'
      },
      escalation_level => {
        default => '',
        description => 'This level defines when this contact will be notified when monitoring devices or services.  Notifications usually escalate to a different set of contacts when the problem is not resolved in a certain amount of time.  This logic is implemented by the chosen external monitoring tool, not Netdot.',
        length => '',
        nullable => 0,
        tag => 'Escalation Level',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      notify_email => {
        default => '',
        description => 'Set this field to the desired Time Period to receive e-mail notifications when monitoring devices or services',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'page_notifications',
          table => 'Availability'
        },
        nullable => 0,
        tag => 'Email Notifications',
        type => 'integer'
      },
      notify_pager => {
        default => '',
        description => 'Set this field to the desired Time Period to receive pager notifications when monitoring devices or services',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'page_notifications',
          table => 'Availability'
        },
        nullable => 0,
        tag => 'Pager Notifications',
        type => 'integer'
      },
      notify_voice => {
        default => '',
        description => 'Set this field to the desired Time Period to receive voice notifications when monitoring devices or services',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'page_notifications',
          table => 'Availability'
        },
        nullable => 0,
        tag => 'Voice Notifications',
        type => 'integer'
      },
      person => {
        default => '',
        description => 'The actual Person that this contact refers to.  The Person table holds the actual contact information',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'roles',
          table => 'Person'
        },
        nullable => 0,
        tag => 'Person',
        type => 'integer'
      }
    },
    description => 'A Contact object is basically a Role of a certain Person.  People can be associated with one or more resources (devices, services, etc) for which they could be contacted.  Each Contact object represents one of these roles.',
    has_history => 1,
    index => [
      [
        'contactlist'
      ],
      [
        'contacttype'
      ]
    ],
    isjoin => '0',
    label => [
      'person',
      'contacttype'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'person',
        'contacttype',
        'contactlist',
        'notify_email',
        'notify_pager',
        'notify_voice',
        'escalation_level',
        'info'
      ],
      brief => [
        'person',
        'contacttype',
        'contactlist'
      ]
    }
  },
  ContactList => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Name for this group',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'A list of contacts',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name',
        'info'
      ]
    }
  },
  ContactType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'The name for this Contact Type',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'Type of contact',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Device => {
    columns => {
      aliases => {
        default => '',
        description => 'Other names by which this Device is known',
        length => '255',
        nullable => 1,
        tag => 'Aliases',
        type => 'varchar'
      },
      bgpid => {
        default => '',
        description => 'Border Gateway Protocol ID.  This usually has the form of an IP address',
        length => '64',
        nullable => 1,
        tag => 'BGP ID',
        type => 'varchar'
      },
      bgplocalas => {
        default => '',
        description => 'Border Gateway Protocol Local Autonomous System number',
        length => '',
        nullable => 1,
        tag => 'BGP Local AS',
        type => 'integer'
      },
      canautoupdate => {
        default => '',
        description => 'If SNMP updates are automated, this value determines whether this Device should be included',
        length => '',
        nullable => 0,
        tag => 'Auto Update?',
        type => 'bool'
      },
      closet => {
        default => '',
        description => 'Communications Closet where this Device is installed',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'devices',
          table => 'Closet'
        },
        nullable => 0,
        tag => 'Closet',
        type => 'integer'
      },
      collect_arp => {
        default => '',
        description => 'Whether Netdot should collect ARP cache data from this Device.  Notice that this is mostly intended for Routers, though not necessarily',
        length => '',
        nullable => 0,
        tag => 'Collect ARP?',
        type => 'bool'
      },
      collect_fwt => {
        default => '',
        description => 'Whether Netdot should collect bridge Forwarding Table (FWT) data from this Device',
        length => '',
        nullable => 0,
        tag => 'Collect FWT?',
        type => 'bool'
      },
      collect_stp => {
        default => '',
        description => 'Enable or Disable querying device for Spanning Tree information',
        length => '',
        nullable => 0,
        tag => 'Collect STP Info?',
        type => 'bool'
      },
      community => {
        default => '',
        description => 'SNMP community',
        length => '64',
        nullable => 1,
        tag => 'SNMP Community',
        type => 'varchar'
      },
      customer_managed => {
        default => '',
        description => 'Does the operation of this Device fall into the responsibility of the customer (or "user" Entity)?',
        length => '',
        nullable => 0,
        tag => 'Managed by Customer?',
        type => 'bool'
      },
      date_installed => {
        default => '1970-01-01 00:00:00',
        description => 'Date that this Device was installed, or first seen in the network',
        length => '',
        nullable => 1,
        tag => 'First Discovered',
        type => 'timestamp'
      },
      down_from => {
        default => '',
        description => 'Device in down time from this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Down From',
        type => 'date'
      },
      down_until => {
        default => '',
        description => 'Device in down time until this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Down Until',
        type => 'date'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      inventorynumber => {
        default => '',
        description => 'A number given to this Device by the organization for accounting/inventory purposes',
        length => '64',
        nullable => 1,
        tag => 'Inventory Number',
        type => 'varchar'
      },
      ipforwarding => {
        default => '',
        description => 'Whether this device has IP forwarding enabled (IP-MIB::ipForwarding.0)',
        length => '',
        nullable => 0,
        tag => 'IP Forward?',
        type => 'bool'
      },
      layers => {
        default => '',
        description => 'Each digit represents a layer of the OSI model served by the device',
        length => '8',
        nullable => 1,
        tag => 'OSI Layers',
        type => 'varchar'
      },
      last_arp => {
        default => '1970-01-01 00:00:00',
        description => 'Last time ARP cache data was collected from this Device',
        length => '',
        nullable => 1,
        tag => 'Last ARP',
        type => 'timestamp'
      },
      last_fwt => {
        default => '1970-01-01 00:00:00',
        description => 'Last time Forwarding Tables (FWT) were collected from this Device',
        length => '',
        nullable => 1,
        tag => 'Last FWT',
        type => 'timestamp'
      },
      last_updated => {
        default => '1970-01-01 00:00:00',
        description => 'Date that this Device was last updated',
        length => '',
        nullable => 1,
        tag => 'Last Updated',
        type => 'timestamp'
      },
      maint_contract => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'devices',
          table => 'MaintContract'
        },
        nullable => 0,
        tag => 'Maintenance Contract',
        type => 'integer'
      },
      maint_from => {
        default => '',
        description => 'Device covered in maintenance from this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Maintenance From',
        type => 'date'
      },
      maint_until => {
        default => '',
        description => 'Device covered in maintenance until this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Maintenance Until',
        type => 'date'
      },
      monitor_config => {
        default => '',
        description => 'Indicates whether this Device should be included in configuration management tools',
        length => '',
        nullable => 0,
        tag => 'Monitor Config?',
        type => 'bool'
      },
      monitored => {
        default => '',
        description => 'Determines if this Device should be included in the configurations for monitoring software',
        length => '',
        nullable => 0,
        tag => 'Monitored?',
        type => 'bool'
      },
      monitorstatus => {
        default => '',
        description => 'The monitoring status of this Device.  This values is supposed to be fed back into Netdot by an external process',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'devices',
          table => 'MonitorStatus'
        },
        nullable => 0,
        tag => 'Monitored Status',
        type => 'integer'
      },
      name => {
        default => '',
        description => 'The Device name is a reference to a DNS Resource Record (RR)',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'devices',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Name',
        type => 'integer'
      },
      oobname => {
        default => '',
        description => 'A name or command used to connect to this Device via an Out of Band connection, such as a Console Server',
        length => '64',
        nullable => 1,
        tag => 'Out-of-Band Hostname',
        type => 'varchar'
      },
      oobnumber => {
        default => '',
        description => 'A phone number used to connect to this Device via an Out of Band modem',
        length => '32',
        nullable => 1,
        tag => 'Out-of-Band Tel Number',
        type => 'varchar'
      },
      owner => {
        default => '',
        description => 'Entity that owns this Device',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'owned_devices',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Owner',
        type => 'integer'
      },
      os => {
        default => '',
        description => 'Operating System name and version',
        length => '128',
        nullable => 1,
        tag => 'OS',
        type => 'varchar'
      },
      person => {
        default => '',
        description => 'A user of this Device.  For example, the end user of an IP Phone',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'devices',
          table => 'Person'
        },
        nullable => 0,
        tag => 'User',
        type => 'integer'
      },
      physaddr => {
        default => '',
        description => 'The base MAC address of this Device.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'devices',
          table => 'PhysAddr'
        },
        nullable => 0,
        tag => 'Base MAC',
        type => 'integer'
      },
      product => {
        default => '',
        description => 'Reference to a Product record.  Products are usually determined via SNMP',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'devices',
          table => 'Product'
        },
        nullable => 0,
        tag => 'Product Name',
        type => 'integer'
      },
      rack => {
        default => '',
        description => 'Rack ID where this Device is physically installed',
        length => '32',
        nullable => 1,
        tag => 'Rack',
        type => 'varchar'
      },
      room => {
        default => '',
        description => 'Room where this Device is installed',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'devices',
          table => 'Room'
        },
        nullable => 0,
        tag => 'Room',
        type => 'integer'
      },
      serialnumber => {
        default => '',
        description => 'Serial Number of the Device',
        length => '64',
        nullable => 1,
        tag => 'S/N',
        type => 'varchar'
      },
      site => {
        default => '',
        description => 'Site or Building where this Device is located.  This is set manually.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'devices',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Site',
        type => 'integer'
      },
      snmp_authkey => {
        default => '',
        description => 'SNMPv3 Authentication Key',
        length => '255',
        nullable => 1,
        tag => 'AuthKey',
        type => 'varchar'
      },
      snmp_authprotocol => {
        default => '',
        description => 'SNMPv3 Authentication Protocol (MD5|SHA)',
        length => '32',
        nullable => 1,
        tag => 'AuthProtocol',
        type => 'varchar'
      },
      snmp_bulk => {
        default => '',
        description => 'Enable or Disable SNMP BULK operations for this device',
        length => '',
        nullable => 0,
        tag => 'SNMP Bulk?',
        type => 'bool'
      },
      snmp_managed => {
        default => '',
        description => 'Enable or Disable SNMP operations on this device',
        length => '',
        nullable => 0,
        tag => 'SNMP Managed?',
        type => 'bool'
      },
      snmp_polling => {
        default => '',
        description => 'Enable or Disable SNMP polling from management tools which get their configurations from Netdot',
        length => '',
        nullable => 0,
        tag => 'SNMP Polling?',
        type => 'bool'
      },
      snmp_privkey => {
        default => '',
        description => 'SNMPv3 Privacy Key',
        length => '255',
        nullable => 1,
        tag => 'PrivKey',
        type => 'varchar'
      },
      snmp_privprotocol => {
        default => '',
        description => 'SNMPv3 Privacy Protocol (AES|DES)',
        length => '32',
        nullable => 1,
        tag => 'PrivProtocol',
        type => 'varchar'
      },
      snmp_securitylevel => {
        default => '',
        description => 'SNMPv3 Security Level (noAuthNoPriv|authNoPriv|authPriv)',
        length => '32',
        nullable => 1,
        tag => 'SecLevel',
        type => 'varchar'
      },
      snmp_securityname => {
        default => '',
        description => 'SNMPv3 user name',
        length => '255',
        nullable => 1,
        tag => 'SecName',
        type => 'varchar'
      },
      snmp_target => {
        default => '',
        description => 'SNMP target IP address.  Netdot will try to always use this IP address when snmp-querying the device',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'snmp_devices',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'SNMP Target Address',
        type => 'integer'
      },
      snmp_version => {
        default => '',
        description => 'Simple Network Management Protocol Version (1|2|3)',
        length => '',
        nullable => 1,
        tag => 'SNMP Version',
        type => 'integer'
      },
      stp_enabled => {
        default => '',
        description => 'Whether some version of the Spanning Tree Protocol is enabled on this switch',
        length => '',
        nullable => 0,
        tag => 'STP Enabled?',
        type => 'bool'
      },
      stp_mst_digest => {
        default => '',
        description => 'Multiple Spanning Tree (MST) Configuration Digest',
        length => '255',
        nullable => 1,
        tag => 'MST Config Digest',
        type => 'varchar'
      },
      stp_mst_region => {
        default => '',
        description => 'Multiple Spanning Tree (MST) region name',
        length => '128',
        nullable => 1,
        tag => 'MST Region',
        type => 'varchar'
      },
      stp_mst_rev => {
        default => '',
        description => 'Multiple Spanning Tree (MST) revision',
        length => '',
        nullable => 1,
        tag => 'MST Revision',
        type => 'integer'
      },
      stp_type => {
        default => '',
        description => 'Spanning Tree Protocol Type (802.1d, MST, PVST, etc)',
        length => '128',
        nullable => 1,
        tag => 'STP Type',
        type => 'varchar'
      },
      sysdescription => {
        default => '',
        description => 'System Description.  Meant to be populated by SNMP',
        length => '255',
        nullable => 1,
        tag => 'System Description',
        type => 'varchar'
      },
      syslocation => {
        default => '',
        description => 'System Location.  Meant to be populated by SNMP.',
        length => '255',
        nullable => 1,
        tag => 'System Location',
        type => 'varchar'
      },
      sysname => {
        default => '',
        description => 'System Name.  Meant to be populated by SNMP.',
        length => '255',
        nullable => 1,
        tag => 'System Name',
        type => 'varchar'
      },
      used_by => {
        default => '',
        description => 'Entity that uses this Device',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'owned_devices',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Used by',
        type => 'integer'
      }
    },
    description => 'A network device.  Particularly, Devices in Netdot are network infrastructure devices that network administrators care about for inventory, monitoring and management purposes.  Not to be confused with end nodes',
    has_history => 1,
    index => [
      [
        'physaddr'
      ],
      [
        'product'
      ],
      [
        'used_by'
      ],
      [
        'inventorynumber'
      ],
      [
        'owner'
      ],
      [
        'os'
      ],
      [
        'sysname'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'aliases',
        'snmp_target',
        'sysname',
        'sysdescription',
        'syslocation',
        'ipforwarding',
        'layers',
        'os',
        'physaddr',
        'bgplocalas',
        'bgpid',
        'oobname',
        'oobnumber',
        'owner',
        'used_by',
        'person',
        'monitored',
        'monitorstatus',
        'customer_managed',
        'community',
        'serialnumber',
        'product',
        'inventorynumber',
        'maint_contract',
        'maint_from',
        'maint_until',
        'canautoupdate',
        'site',
        'snmp_managed',
        'snmp_polling',
	'collect_arp',
	'last_arp',
	'collect_fwt',
        'collect_stp',
	'last_fwt',
        'snmp_bulk',
        'snmp_version',
        'snmp_securityname',
        'snmp_authkey',
        'snmp_authprotocol',
        'snmp_privkey',
        'snmp_privprotocol',
        'snmp_securitylevel',
	'stp_enabled',
        'stp_type',
        'stp_mst_region',
        'stp_mst_rev',
	'stp_mst_digest',
        'room',
        'closet',
        'rack',
        'last_updated',
        'date_installed',
	'down_from',
        'down_until',
        'info'
      ],
      brief => [
        'name',
        'product',
        'site',
      ]
    }
  },
  DeviceModule => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      class => {
        default => '',
        description => 'Module Class',
        length => '128',
        nullable => 1,
        tag => 'Class',
        type => 'varchar'
      },
      date_installed => {
        default => '1970-01-01 00:00:00',
        description => 'Date when this module was installed/discovered',
        length => '',
        nullable => 0,
        tag => 'First Discovered',
        type => 'timestamp'
      },
      description => {
        default => '',
        description => 'A textual description of physical entity',
        length => '255',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      device => {
        default => '',
        description => 'Device where this Module belongs',
        length => '',
        linksto => {
          cascade => 'Delete',
	  order_by => 'contained_in,pos,number',
          method => 'modules',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      fw_rev => {
        default => '',
        description => 'The vendor-specific firmware revision string for the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Firmware Revision',
        type => 'varchar'
      },
      fru => {
        default => '',
        description => 'Whether or not this physical entity is considered a "Field Replaceable Unit" by the vendor.',
        length => '',
        nullable => 0,
        tag => 'FRU?',
        type => 'bool'
      },
      hw_rev => {
        default => '',
        description => 'The vendor-specific hardware revision string for the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Hardware Revision',
        type => 'varchar'
      },
      name => {
        default => '',
        description => 'The textual name of the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Name',
        type => 'varchar'
      },
      number => {
        default => '',
        description => 'Module index number',
        length => '',
        nullable => 0,
        tag => 'Number',
        type => 'integer'
      },
      model => {
        default => '',
        description => 'The vendor-specific model name identifier string associated with this physical component',
        length => '128',
        nullable => 1,
        tag => 'Model',
        type => 'varchar'
      },
      contained_in => {
        default => '',
        description => 'The number for the physical entity which "contains" this physical entity',
        length => '',
        nullable => 1,
        tag => 'Contained In',
        type => 'integer'
      },
      pos => {
        default => '',
        description => 'An indication of the relative position of this child component among all its sibling components',
        length => '',
        nullable => 1,
        tag => 'Position',
        type => 'integer'
      },
      serialnumber => {
        default => '',
        description => 'The vendor-specific serial number string for the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Serial Number',
        type => 'varchar'
      },
      sw_rev => {
        default => '',
        description => 'The vendor-specific software revision string for the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Software Revision',
        type => 'varchar'
      },
      type => {
        default => '',
        description => 'An indication of the vendor-specific hardware type of the physical entity',
        length => '128',
        nullable => 1,
        tag => 'Type',
        type => 'varchar'
      },
      last_updated => {
        default => '1970-01-01 00:00:00',
        description => 'Date when this module was installed/discovered',
        length => '',
        nullable => 0,
        tag => 'Last Updated',
        type => 'timestamp'
      }
    },
    description => 'A Device Physical Entity',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
	'name',
    ],
    primary_key => 'id',
    unique => [
      [
        'device',
        'number'
      ]
    ],
    views => {
      all => [
      'device',
      'contained_in',
      'number',
      'pos',
      'name',
      'type',
      'class',
      'description',
      'model',
      'hw_rev',
      'fw_rev',
      'sw_rev',
      'fru',
      'serialnumber',
      'date_installed',
      'last_updated',
      ],
      brief => [
	'number',
        'name',
        'class',
        'model',
        'description',
        'serialnumber',
      ]
    }
  },
  DeviceContacts => {
    columns => {
      contactlist => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'devices',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      device => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'contacts',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      }
    },
    description => 'Device to Contactlist join table',
    has_history => 0,
    index => [],
    isjoin => '1',
    label => [
      'contactlist'
    ],
    primary_key => 'id',
    unique => [
      [
        'device',
        'contactlist'
      ]
    ],
    views => {
      all => [
        'device',
        'contactlist'
      ],
      brief => [
        'device',
        'contactlist'
      ]
    }
  },
  DhcpAttr => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      name => {
        default => '',
        description => 'Name of this attribute',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'attributes',
          table => 'DhcpAttrName'
        },
        nullable => 0,
        tag => 'Name',
        type => 'integer'
      },
      scope => {
        default => '',
        description => 'DHCP scope where this attribute will be applied',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'attributes',
          table => 'DhcpScope'
        },
        nullable => 0,
        tag => 'Scope',
        type => 'integer'
      },
      value => {
        default => '',
        description => 'Value for this attribute',
        length => '255',
        nullable => 0,
        tag => 'Value',
        type => 'varchar'
      }
    },
    description => 'A DHCP Attribute or Parameter',
    has_history => 0,
    index => [
      [
        'scope'
      ],
    ],
    isjoin => '0',
    label => [
      'name',
      'value'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'value',
        'scope'
      ],
      brief => [
        'name',
        'value',
        'scope'
      ]
    }
  },
  DhcpAttrName => {
    columns => {
      code => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Code',
        type => 'integer'
      },
      format => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Format',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'A DHCP Attributes Name',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'code',
        'format',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  DhcpScope => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      fixed_address => {
        default => '',
        description => 'Reference to an IPblock object.  Only applies to host scopes.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'dhcp_hosts',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'Fixed Address',
        type => 'integer'
      },
      subnet => {
        default => '',
        description => 'Reference to an IPblock object.  Only applies to subnet scopes.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'dhcp_subnets',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'Subnet',
        type => 'integer'
      },
      physaddr => {
        default => '',
        description => 'Reference to a MAC object.  Only useful within host scopes.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'dhcp_hosts',
          table => 'PhysAddr'
        },
        nullable => 0,
        tag => 'Hardware Ethernet',
        type => 'integer'
      },
      name => {
        default => '',
        description => 'Name of the Scope.  For example, a host name is the name of a scope of type "host".',
        length => '128',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      parent => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'children',
          table => 'DhcpScope'
        },
        nullable => 0,
        tag => 'Parent Scope',
        type => 'integer'
      },
      type => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'scopes',
          table => 'DhcpScopeType'
        },
        nullable => 0,
        tag => 'Type',
        type => 'integer'
      }
    },
    description => 'A DHCP Scope',
    has_history => 0,
    index => [
      ['fixed_address'], ['type' ]
    ],
    isjoin => '0',
    label => [
      'type',
      'name'
    ],
    primary_key => 'id',
    unique => [ ['name'] ],
    views => {
      all => [
        'type',
        'name',
        'parent',
        'fixed_address',
        'subnet',
        'physaddr',
        'info'
      ],
      class => [
        'type',
        'name',
        'parent',
        'info'
      ],
      global => [
        'type',
        'name',
        'parent',
        'info'
      ],
      group => [
        'type',
        'name',
        'parent',
        'info'
      ],
      host => [
        'type',
        'name',
        'parent',
        'fixed_address',
        'physaddr',
        'info'
      ],
      pool => [
        'type',
        'name',
        'parent',
        'info'
      ],
      'shared-network' => [
        'type',
        'name',
        'parent',
        'info'
      ],
      subclass => [
        'type',
        'name',
        'parent',
        'info'
      ],
      subnet => [
        'type',
        'subnet',
        'parent',
        'info'
      ],
      brief => [
        'type',
        'name'
      ]
    }
  },
  DhcpScopeType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'A DHCP Scope Type',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Entity => {
    columns => {
      acctnumber => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Account Number',
        type => 'varchar'
      },
      aliases => {
        default => '',
        description => 'Other names by which this Entity is known',
        length => '255',
        nullable => 1,
        tag => 'Aliases',
        type => 'varchar'
      },
      asname => {
        default => '',
        description => 'The Autonomous System Name of this Peer Entity',
        length => '32',
        nullable => 1,
        tag => 'AS Name',
        type => 'varchar'
      },
      asnumber => {
        default => '',
        description => 'The Autonomous System Number of this Peer Entity',
        length => '',
        nullable => 1,
        tag => 'AS Number',
        type => 'integer'
      },
      availability => {
        default => '',
        description => 'Time Period at which this Entity is available',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'entities',
          table => 'Availability'
        },
        nullable => 0,
        tag => 'Availability',
        type => 'integer'
      },
      contactlist => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'entities',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      maint_contract => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Maintenance Contract',
        type => 'varchar'
      },
      name => {
        default => '',
        description => 'Name of this Entity',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      oid => {
        default => '',
        description => 'The Enterprise Object ID is a unique value assigned to an Entity to use in their SNMP agents',
        length => '32',
        nullable => 1,
        tag => 'Enterprise OID',
        type => 'varchar'
      },
      short_name => {
        default => '',
        description => 'A short name for this Entity',
        length => '64',
        nullable => 1,
        tag => 'Short Name',
        type => 'varchar'
      },
    },
    description => 'An organization related to the network in some way',
    has_history => 1,
    index => [
      [
        'oid'
      ],
      [
        'asname'
      ],
      [
        'asnumber'
      ],
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'aliases',
        'short_name',
        'availability',
        'contactlist',
        'acctnumber',
        'maint_contract',
        'asname',
        'asnumber',
        'oid',
        'info'
      ],
      brief => [
        'name',
        'short_name',
      ],
      manufacturer => [
        'name',
        'aliases',
        'short_name',
        'type',
        'contactlist',
        'oid',
        'info'
      ],
      peer => [
        'name',
        'aliases',
        'short_name',
        'type',
        'availability',
        'contactlist',
        'asname',
        'asnumber',
        'info'
      ],
      provider => [
        'name',
        'aliases',
        'short_name',
        'type',
        'availability',
        'contactlist',
        'asname',
        'asnumber',
        'info'
      ],
    }
  },
  EntityRole => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      entity => {
        default => '',
        description => 'The Entity that performs this role.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'roles',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Entity',
        type => 'integer'
      },
      type => {
        default => '',
        description => 'A type of Entity.',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'roles',
          table => 'EntityType'
        },
        nullable => 0,
        tag => 'Type',
        type => 'integer'
      },
    },
    description => 'An Entity might play different roles.  For example, the same Entity can be both a Customer and a Peer.',
    has_history => 0,
    index => [ ],
    isjoin => '1',
    label => [
      'entity', 'type'
    ],
    primary_key => 'id',
    unique => [
      [
        'entity', 'type'
      ]
    ],
    views => {
      all => [
        'entity',
        'type',
      ],
      brief => [
        'entity',
        'type',
      ],
    },
  },
  EntitySite => {
    columns => {
      entity => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'sites',
          table => 'Entity'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      site => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'entities',
          table => 'Site'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      }
    },
    description => 'Entity to Site join table',
    has_history => 0,
    index => [],
    isjoin => '1',
    label => [
      'entity',
      'site'
    ],
    primary_key => 'id',
    unique => [
      [
        'entity',
        'site'
      ]
    ],
    views => {
      all => [
        'entity',
        'site'
      ],
      brief => [
        'entity',
        'site'
      ]
    }
  },
  EntityType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'Types of Entities',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  FWTable => {
    columns => {
      device => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          order_by => 'tstamp DESC',
          method => 'forwarding_tables',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      tstamp => {
        default => '1970-01-01 00:00:00',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Timestamp',
        type => 'timestamp'
      }
    },
    description => 'Bridge Forwarding Table.  One of these is created every time a Device is queried.  Entries in these tables contain physical addresses and the ports where they have been seen.',
    has_history => 0,
    index => [ ['device'], ['tstamp'] ],
    isjoin => '0',
    label => [
      'tstamp',
      'device'
    ],
    primary_key => 'id',
    unique => [ ['device','tstamp'] ],
    views => {
      all => [
        'tstamp',
        'device'
      ],
      brief => [
        'tstamp',
        'device'
      ]
    }
  },
  FWTableEntry => {
    columns => {
      fwtable => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'entries',
          table => 'FWTable'
        },
        nullable => 0,
        tag => 'Table',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      interface => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'fwt_entries',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Interface',
        type => 'integer'
      },
      physaddr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'fwt_entries',
          table => 'PhysAddr'
        },
        nullable => 0,
        tag => 'Physical Address',
        type => 'integer'
      }
    },
    description => 'Bridge Forwarding Table entry',
    has_history => 0,
    index => [ ['fwtable'], ['interface'], ['physaddr'] ],
    isjoin => '0',
    label => [
      'interface',
      'physaddr'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'interface',
        'physaddr',
        'fwtable',
      ],
      brief => [
        'interface',
        'physaddr'
      ]
    }
  },
  FiberType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'A name for this Fiber Type',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'Types of Fiber',
    has_history => 0,
    index => [
      [
        'name'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Floor => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      level => {
        default => '',
        description => '',
        length => '32',
        nullable => 0,
        tag => 'Level',
        type => 'varchar'
      },
      site => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'floors',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Site',
        type => 'integer'
      }
    },
    description => 'Floor Table',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'level',
      'site'
    ],
    primary_key => 'id',
    unique => [
      [
        'level',
        'site'
      ]
    ],
    views => {
      all => [
        'level',
        'site',
        'info'
      ],
      brief => [
        'level',
        'site'
      ]
    }
  },
  HorizontalCable => {
    columns => {
      account => {
        default => '',
        description => 'An internal account number to which the installation of this cable should be billed to',
        length => '32',
        nullable => 1,
        tag => 'Account',
        type => 'varchar'
      },
      closet => {
        default => '',
        description => 'The communications closet where this cable originates',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'horizontalcables',
          table => 'Closet'
        },
        nullable => 0,
        tag => 'Closet',
        type => 'integer'
      },
      contactlist => {
        default => '',
        description => 'A group of people that manages this cable',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'outlets',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      datetested => {
        default => '',
        description => 'Date this cable was last tested (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Date Tested',
        type => 'date'
      },
      faceplateid => {
        default => '',
        description => 'ID of the faceplate where this cable is terminated',
        length => '64',
        nullable => 0,
        tag => 'Faceplate ID',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      installdate => {
        default => '',
        description => 'Date this cable was installed (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Date Installed',
        type => 'date'
      },
      jackid => {
        default => '',
        description => 'ID of the Jack where this cable is terminated',
        length => '64',
        nullable => 0,
        tag => 'Jack ID',
        type => 'varchar'
      },
      length => {
        default => '',
        description => 'Length of this cable',
        length => '32',
        nullable => 1,
        tag => 'Length',
        type => 'varchar'
      },
      room => {
        default => '',
        description => 'Room where this cable terminates',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'jacks',
          table => 'Room'
        },
        nullable => 0,
        tag => 'Room',
        type => 'integer'
      },
      testpassed => {
        default => '',
        description => 'Cable test result (pass/fail)',
        length => '',
        nullable => 0,
        tag => 'Passed Test?',
        type => 'bool'
      },
      type => {
        default => '',
        description => 'Type of this cable',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'horizontalcables',
          table => 'CableType'
        },
        nullable => 0,
        tag => 'Type',
        type => 'integer'
      }
    },
    description => 'Horizontal Cable',
    has_history => 0,
    index => [
      [
        'account'
      ]
    ],
    isjoin => '0',
    label => [
      'jackid'
    ],
    primary_key => 'id',
    unique => [
      [
        'jackid',
        'faceplateid',
        'closet',
        'room'
      ]
    ],
    views => {
      all => [
        'jackid',
        'faceplateid',
        'type',
        'datetested',
        'testpassed',
        'installdate',
        'length',
        'closet',
        'room',
        'account',
        'contactlist',
        'info'
      ],
      brief => [
        'jackid',
        'closet',
        'room'
      ]
    }
  },
  Interface => {
    columns => {
      admin_duplex => {
        default => '',
        description => 'Administrative status of the Duplex setting on this Interface',
        length => '16',
        nullable => 1,
        tag => 'Admin Duplex',
        type => 'varchar'
      },
      admin_status => {
        default => '',
        description => 'Administrative status of this Interface',
        length => '16',
        nullable => 1,
        tag => 'Admin Status',
        type => 'varchar'
      },
      bpdu_filter_enabled => {
        default => '',
        description => 'Whether BPDU filter is enabled on this port',
        length => '',
        nullable => 0,
        tag => 'BPDU Filter?',
        type => 'bool'
      },
      bpdu_guard_enabled => {
        default => '',
        description => 'Whether BPDU Guard is enabled on this port',
        length => '',
        nullable => 0,
        tag => 'BPDU Guard?',
        type => 'bool'
      },
      contactlist => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'interfaces',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      description => {
        default => '',
        description => 'A short description for this Interface.',
        length => '128',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      device => {
        default => '',
        description => 'Device to which this Interface belongs to',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'interfaces',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      dp_remote_id => {
        default => '',
        description => 'Discovery Protocol Remote Device ID.',
        length => '128',
        nullable => 1,
        tag => 'DP Remote ID',
        type => 'varchar'
      },
      dp_remote_ip => {
        default => '',
        description => 'Discovery Protocol Remote Device IP address.',
        length => '128',
        nullable => 1,
        tag => 'DP Remote IP',
        type => 'varchar'
      },
      dp_remote_port => {
        default => '',
        description => 'Discovery Protocol Remote Device Port.',
        length => '128',
        nullable => 1,
        tag => 'DP Remote Port',
        type => 'varchar'
      },
      dp_remote_type => {
        default => '',
        description => 'Discovery Protocol Remote Device Type.',
        length => '255',
        nullable => 1,
        tag => 'DP Remote Type',
        type => 'varchar'
      },
      down_from => {
        default => '',
        description => 'Interface in down time from this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Down From',
        type => 'date'
      },
      down_until => {
        default => '',
        description => 'Interface in down time until this date (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Down Until',
        type => 'date'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      jack => {
        default => '',
        description => 'Reference to a Jack or Cable where this Interface is connected',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'interfaces',
          table => 'HorizontalCable'
        },
        nullable => 0,
        tag => 'Jack',
        type => 'integer'
      },
      jack_char => {
        default => '',
        description => 'The ID of the Jack where this Interface is connected',
        length => '32',
        nullable => 1,
        tag => 'Jack(char)',
        type => 'varchar'
      },
      loop_guard_enabled => {
        default => '',
        description => 'Whether Loop guard is enabled on this port',
        length => '',
        nullable => 0,
        tag => 'Loop Guard?',
        type => 'bool'
      },
      monitored => {
        default => '',
        description => 'Determine whether this Interface should be included in the configuration of an external monitoring software',
        length => '',
        nullable => 0,
        tag => 'Monitored?',
        type => 'bool'
      },
      monitorstatus => {
        default => '',
        description => 'The status of this Interface given by an external monitoring process',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'interfaces',
          table => 'MonitorStatus'
        },
        nullable => 0,
        tag => 'Monitored Status',
        type => 'integer'
      },
      name => {
        default => '',
        description => 'The name of this Interface',
        length => '64',
        nullable => 1,
        tag => 'Name',
        type => 'varchar'
      },
      neighbor => {
        default => '',
        description => 'Another Interface to which this one is physically connected',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'neighbors',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Neighbor',
        type => 'integer'
      },
      neighbor_fixed => {
        default => 0,
        description => 'Determines whether this link can be modified by automatic topology discovery mechanisms.',
        length => '',
        nullable => 0,
        tag => 'Neighbor Fixed?',
        type => 'bool'
      },
      number => {
        default => '',
        description => 'The number of this Interface (usually corresponds to SNMP ifIndex).  In some cases, this value can be a alphanumeric string.',
        length => '64',
        nullable => 0,
        tag => 'Number',
        type => 'varchar'
      },
      oper_duplex => {
        default => '',
        description => 'Operational Duplex setting',
        length => '16',
        nullable => 1,
        tag => 'Oper Duplex',
        type => 'varchar'
      },
      oper_status => {
        default => '',
        description => 'Operational Status of this Interface',
        length => '16',
        nullable => 1,
        tag => 'Oper Status',
        type => 'varchar'
      },
      overwrite_descr => {
        default => '',
        description => 'Determines whether the description for this Interface should be overwritten via SNMP updates',
        length => '',
        nullable => 0,
        tag => 'Overwrite Description?',
        type => 'bool'
      },
      physaddr => {
        default => '',
        description => 'MAC address of this Interface',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'interfaces',
          table => 'PhysAddr'
        },
        nullable => 0,
        tag => 'Physical (MAC) Address',
        type => 'integer'
      },
      room_char => {
        default => '',
        description => 'Room number where this Interface is connected',
        length => '32',
        nullable => 1,
        tag => 'Room(char)',
        type => 'varchar'
      },
      root_guard_enabled => {
        default => '',
        description => 'Whether Root guard is enabled on this port',
        length => '',
        nullable => 0,
        tag => 'Root Guard?',
        type => 'bool'
      },
      snmp_managed => {
        default => '',
        description => 'Determines whether this Interface should be included in the collection of SNMP statistics',
        length => '',
        nullable => 0,
        tag => 'SNMP-Managed?',
        type => 'bool'
      },
      speed => {
        default => '',
        description => 'Bits Per Second (bps) speed of which this Interface is capable of',
        length => '',
        nullable => 1,
        tag => 'Speed',
        type => 'bigint'
      },
     stp_id => {
        default => '',
        description => 'The ID of this port in the Spanning Tree Protocol (dot1dStpPort)',
        length => '32',
        nullable => 1,
        tag => 'STP Port ID',
        type => 'varchar'
      },
      type => {
        default => '',
        description => 'Type of Interface',
        length => '32',
        nullable => 1,
        tag => 'Type',
        type => 'varchar'
      }
    },
    description => 'An interface associated with a device',
    has_history => 1,
    index => [ ['description'], ['stp_id'], ['physaddr'], ['jack'], ['neighbor'], ['oper_duplex'], ['oper_status'], ['speed'] ],
    isjoin => '0',
    label => [
      'name',
      'device'
    ],
    primary_key => 'id',
    unique => [ [ 'device', 'number', 'name' ] ],
    views => {
      all => [
        'number',
        'name',
        'device',
        'jack',
        'jack_char',
        'room_char',
        'description',
        'overwrite_descr',
        'type',
        'speed',
        'admin_duplex',
        'oper_duplex',
        'admin_status',
        'oper_status',
        'monitored',
        'monitorstatus',
        'snmp_managed',
        'physaddr',
	'neighbor',
        'neighbor_fixed',
	'stp_id',
	'bpdu_filter_enabled',
	'bpdu_guard_enabled',
	'loop_guard_enabled',
	'root_guard_enabled',
        'dp_remote_id',
        'dp_remote_ip',
        'dp_remote_port',
        'dp_remote_type',
	'down_from',
        'down_until',
        'contactlist',
        'info'
      ],
      brief => [
        'number',
        'name',
        'device',
        'jack',
        'description',
        'neighbor',
      ]
    }
  },
  InterfaceVlan => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      interface => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'vlans',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Interface',
        type => 'integer'
      },
     stp_instance => {
        default => '',
        description => 'The Spanning Tree Protocol instance that this port belongs to, for this VLAN',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'stp_ports',
          table => 'STPInstance'
        },
        nullable => 0,
        tag => 'STP Instance',
        type => 'integer'
      },
      stp_des_bridge => {
        default => '',
        description => 'The Bridge ID of the bridge that this port considers to be the Designated Bridge for this segment (dot1dStpPortDesignatedBridge)',
        length => '32',
        nullable => 1,
        tag => 'STP Des. Bridge',
        type => 'varchar'
      },
     stp_des_port => {
        default => '',
        description => 'The Port ID of the port on the Designated Bridge for this segment (dot1dStpPortDesignatedPort)',
        length => '32',
        nullable => 1,
        tag => 'STP Des. Port',
        type => 'varchar'
      },
      stp_state => {
        default => '',
        description => 'The current Spanning Tree State of this port (dot1dStpPortState). It can be one of: 1 - disabled, 2 - blocking, 3 - listening, 4 - learning, 5 - forwarding, 6 - broken',
        length => '32',
        nullable => 1,
        tag => 'STP State',
        type => 'varchar'
      },
      vlan => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'interfaces',
          table => 'Vlan'
        },
        nullable => 0,
        tag => 'Vlan',
        type => 'integer'
      }
    },
    description => 'Interface to VLAN join table',
    has_history => 0,
    index => [
      [
       'stp_instance',
      ],
      [
       'stp_des_bridge',
      ],
      [
       'stp_des_port',
      ],
    ],
    isjoin => '0',
    label => [
      'interface',
      'vlan'
    ],
    primary_key => 'id',
    unique => [
      [
        'interface',
        'vlan'
      ]
    ],
    views => {
      all => [
        'interface',
        'vlan',
        'stp_instance',
	'stp_des_bridge',
	'stp_des_port',
	'stp_state',
      ],
      brief => [
        'interface',
        'vlan',
        'stp_instance',
	'stp_des_bridge',
	'stp_des_port',
	'stp_state',
      ]
    }
  },
  IpService => {
    columns => {
      contactlist => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'services',
          table => 'ContactList'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      ip => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'services',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      monitored => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'bool'
      },
      monitorstatus => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'ipservices',
          table => 'MonitorStatus'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      service => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'Ips',
          table => 'Service'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      }
    },
    description => 'A relationship between an IP address and a running Internet service',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'ip',
      'service'
    ],
    primary_key => 'id',
    unique => [
      [
        'ip',
        'service'
      ]
    ],
    views => {
      all => [
        'ip',
        'service',
        'monitored',
        'monitorstatus',
        'contactlist'
      ],
      brief => [
        'ip',
        'service'
      ]
    }
  },
  Ipblock => {
    columns => {
      address => {
        default => '',
        description => 'IP Address.  This value is stored as an integer in the database',
        length => '40,0',
        nullable => 0,
        tag => 'Address',
        type => 'numeric'
      },
      description => {
        default => '',
        description => 'A short description for this IP address or block',
        length => '128',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      dhcp_enabled => {
        default => '',
        description => 'Whether this address should be offered via DHCP',
        length => '',
        nullable => 0,
        tag => 'Enable DHCP?',
        type => 'bool'
      },
      first_seen => {
        default => '1970-01-01 00:00:00',
        description => 'Date that this address or block was first seen',
        length => '',
        nullable => 0,
        tag => 'First Seen',
        type => 'timestamp'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Info',
        type => 'blob'
      },
      interface => {
        default => '',
        description => 'Device interface where this address is configured',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'ips',
          table => 'Interface'
        },
        nullable => 0,
        tag => 'Interface',
        type => 'integer'
      },
      last_seen => {
        default => '1970-01-01 00:00:00',
        description => 'Last time when this address or block was seen',
        length => '',
        nullable => 0,
        tag => 'Last Seen',
        type => 'timestamp'
      },
      owner => {
        default => '',
        description => 'Entity that owns this block',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'owned_blocks',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Owner',
        type => 'integer'
      },
      parent => {
        default => '',
        description => 'Smallest IP block that contains this address or block.',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'children',
          order_by => 'address',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'Parent',
        type => 'integer'
      },
      prefix => {
        default => '',
        description => 'Prefix length of this IP block',
        length => '',
        nullable => 0,
        tag => 'Prefix Length',
        type => 'integer'
      },
      status => {
        default => '',
        description => 'Status of this IP block',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'ipblocks',
          table => 'IpblockStatus'
        },
        nullable => 0,
        tag => 'Status',
        type => 'integer'
      },
      used_by => {
        default => '',
        description => 'Entity that uses this block',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'used_blocks',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Used by',
        type => 'integer'
      },
      version => {
        default => '',
        description => 'IP version (4 or 6)',
        length => '',
        nullable => 0,
        tag => 'Version(4/6)',
        type => 'integer'
      },
      vlan => {
        default => '',
        description => 'VLAN to which this subnet is associated',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'subnets',
          table => 'Vlan'
        },
        nullable => 0,
        tag => 'Vlan',
        type => 'integer'
      },
    },
    description => 'An IP (v4 or v6) Address',
    has_history => 0,
    index => [
      [
        'parent'
      ],
      [
        'status'
      ],
      [
        'first_seen'
      ],
      [
        'last_seen'
      ],
      [
        'interface'
      ],
      [
        'vlan'
      ]
    ],
    isjoin => '0',
    label => [
      'address',
      'prefix'
    ],
    primary_key => 'id',
    unique => [
      [
        'address',
        'prefix'
      ]
    ],
    views => {
      all => [
        'address',
        'prefix',
        'version',
        'parent',
        'interface',
        'vlan',
        'status',
        'owner',
        'used_by',
        'description',
        'first_seen',
        'last_seen',
        'dhcp_enabled',
        'info'
      ],
      brief => [
        'address',
        'prefix',
        'status',
        'used_by',
        'description',
      ]
    }
  },
  IpblockStatus => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => undef,
        type => 'varchar'
      }
    },
    description => 'IP block status',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name'
      ],
      brief => [
        'name'
      ]
    }
  },
  MaintContract => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      provider => {
        default => '',
        description => 'Maintenace Contract Provider',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'maintenance_contracts',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Provider',
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      number => {
        default => '',
        description => '',
        length => '255',
        nullable => 0,
        tag => 'Number',
        type => 'varchar'
      }
    },
    description => 'Device Maintenance Contract',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => ['provider','number'],
    primary_key => 'id',
    unique => [ ['number'] ],
    views => {
      all => ['number','provider','info'],
      brief => ['number']
    }
  },
  MonitorStatus => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '128',
        nullable => 0,
        tag => 'Status',
        type => 'varchar'
      }
    },
    description => 'Status information for what is monitored',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  OUI => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      oui => {
        default => '',
        description => 'Organizationally Unique Identifier.  Assigned by the IEEE to Ethernet hardware manufacturers.',
        length => '6',
        nullable => 0,
        tag => 'OUI',
        type => 'varchar'
      },
      vendor => {
        default => '',
        description => 'Manufacturer of Ethernet hardware',
        length => '128',
        nullable => 0,
        tag => 'Vendor',
        type => 'varchar'
      }
    },
    description => 'Organizationally Unique Identifier',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'oui', 'vendor'
    ],
    primary_key => 'id',
    unique => [
      [
        'oui'
      ]
    ],
    views => {
      all => [
        'oui',
        'vendor'
      ],
      brief => [
        'oui' , 'vendor'
      ]
    }
  },
  Person => {
    columns => {
      aliases => {
        default => '',
        description => 'Other names by which this Person is known',
        length => '255',
        nullable => 1,
        tag => 'Aliases',
        type => 'varchar'
      },
      cell => {
        default => '',
        description => 'Cellular Phone number',
        length => '32',
        nullable => 1,
        tag => 'Cell Phone',
        type => 'varchar'
      },
      email => {
        default => '',
        description => 'E-mail address',
        length => '64',
        nullable => 1,
        tag => 'Email',
        type => 'varchar'
      },
      emailpager => {
        default => '',
        description => 'Email address used for paging (via a pager gateway)',
        length => '32',
        nullable => 1,
        tag => 'Pager Email',
        type => 'varchar'
      },
      entity => {
        default => '',
        description => 'Entity associated with this Person',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'people',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Employer',
        type => 'integer'
      },
      extension => {
        default => '',
        description => 'Work Telephone number extension',
        length => '',
        nullable => 1,
        tag => 'Work Phone Extension',
        type => 'integer'
      },
      fax => {
        default => '',
        description => 'Fax number',
        length => '32',
        nullable => 1,
        tag => 'Fax',
        type => 'varchar'
      },
      firstname => {
        default => '',
        description => 'First Name',
        length => '64',
        nullable => 0,
        tag => 'First Name',
        type => 'varchar'
      },
      home => {
        default => '',
        description => 'Home Telephone Number',
        length => '32',
        nullable => 1,
        tag => 'Home Phone',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      lastname => {
        default => '',
        description => 'Last Name',
        length => '64',
        nullable => 0,
        tag => 'Last Name',
        type => 'varchar'
      },
      location => {
        default => '',
        description => 'Site where this Person is located.  The Site is used instead of an Address',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'people',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Site',
        type => 'integer'
      },
      office => {
        default => '',
        description => 'Office or Work telephone number',
        length => '32',
        nullable => 1,
        tag => 'Work Phone',
        type => 'varchar'
      },
      pager => {
        default => '',
        description => 'Pager number',
        length => '32',
        nullable => 1,
        tag => 'Pager',
        type => 'varchar'
      },
      position => {
        default => '',
        description => 'Position within the organization',
        length => '64',
        nullable => 1,
        tag => 'Position',
        type => 'varchar'
      },
      room => {
        default => '',
        description => 'Room where person is located, if available',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'people',
          table => 'Room'
        },
        nullable => 0,
        tag => 'Room',
        type => 'integer'
      },
    },
    description => 'Information about an individual',
    has_history => 1,
    index => [
      [
        'email'
      ]
    ],
    isjoin => '0',
    label => [
      'lastname',
      'firstname'
    ],
    primary_key => 'id',
    unique => [
      [
        'firstname',
        'lastname',
        'entity'
      ]
    ],
    views => {
      all => [
        'lastname',
        'firstname',
        'aliases',
        'position',
        'entity',
        'location',
        'room',
        'email',
        'office',
        'extension',
        'cell',
        'home',
        'pager',
        'emailpager',
        'fax',
        'info'
      ],
      brief => [
        'lastname',
        'firstname',
        'office',
        'entity'
      ]
    }
  },
  PhysAddr => {
    columns => {
      address => {
        default => '',
        description => 'A 48 bit MAC address in Hexadecimal digits (with no delimiters)',
        length => '128',
        nullable => 0,
        tag => 'Address',
        type => 'varchar'
      },
      first_seen => {
        default => '1970-01-01 00:00:00',
        description => 'Time when this address was first seen in the network',
        length => '',
        nullable => 0,
        tag => 'First Seen',
        type => 'timestamp'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      last_seen => {
        default => '1970-01-01 00:00:00',
        description => 'Time when this address was last seen in the network',
        length => '',
        nullable => 0,
        tag => 'Last Seen',
        type => 'timestamp'
      },
      static => {
        default => '',
        description => 'If this value is set, the address is considered permanent and should not be removed, even if it has not been seen in the network for a given amount of time',
        length => '',
        nullable => 0,
        tag => 'Static?',
        type => 'bool'
      }
    },
    description => 'A physical or MAC address',
    has_history => 0,
    index => [ ['first_seen' ], ['last_seen'] ],
    isjoin => '0',
    label => [
      'address'
    ],
    primary_key => 'id',
    unique => [
      [
        'address'
      ]
    ],
    views => {
      all => [
        'address',
        'static',
        'first_seen',
        'last_seen'
      ],
      brief => [
        'address',
        'static',
        'first_seen',
        'last_seen'
      ]
    }
  },
  Product => {
    columns => {
      description => {
        default => '',
        description => 'A short description for this Product',
        length => '128',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      manufacturer => {
        default => '',
        description => 'Reference to an Entity which manufactures this product',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'products',
          table => 'Entity'
        },
        nullable => 0,
        tag => 'Manufacturer',
        type => 'integer'
      },
      name => {
        default => '',
        description => 'Product Name',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      sysobjectid => {
        default => '',
        description => 'SNMP Object ID given to this product by its manufacturer',
        length => '128',
        nullable => 1,
        tag => 'System ID',
        type => 'varchar'
      },
      type => {
        default => '',
        description => 'Product Type. Types of network products include routers, switches, hubs, etc.',
        length => '',
        linksto => {
          cascade => 'Fail',
          method => 'products',
          table => 'ProductType'
        },
        nullable => 0,
        tag => 'Type',
        type => 'integer'
      }
    },
    description => 'Product Names',
    has_history => 1,
    index => [
      [
        'sysobjectid'
      ],
      [
        'type'
      ],
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name',
        'manufacturer'
      ]
    ],
    views => {
      all => [
        'name',
        'type',
        'description',
        'sysobjectid',
        'manufacturer',
        'info'
      ],
      brief => [
        'name',
        'type',
        'description',
        'manufacturer'
      ]
    }
  },
  ProductType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'Types of network devices',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  RR => {
    columns => {
      active => {
        default => '',
        description => 'Should this record be included in the Zone files generated by Netdot?',
        length => '',
        nullable => 0,
        tag => 'Active?',
        type => 'bool'
      },
      auto_update => {
        default => '',
        description => 'Determines whether this record can be updated by an automated process.  For example, if a Device Interface changes its name and the change is picked up by an SNMP update',
        length => '',
        nullable => 0,
        tag => 'Auto Update?',
        type => 'bool'
      },
      expiration => {
        default => '',
        description => 'Expiration Date for this Record (YYYY-MM-DD)',
        length => '',
        nullable => 1,
        tag => 'Expiration Date',
        type => 'date'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'The identifier for this Record',
        length => '128',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      zone => {
        default => '',
        description => 'Zone or Domain to which this record belongs',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'records',
          table => 'Zone'
        },
        nullable => 0,
        tag => 'Zone',
        type => 'integer'
      }
    },
    description => 'DNS Resource Record',
    has_history => 0,
    index => [ ['name'], ['zone'], ['expiration'] ],
    isjoin => '0',
    label => [
      'name',
      'zone',
    ],
    primary_key => 'id',
    unique => [ ['zone', 'name'] ],
    views => {
      all => [
        'name',
        'zone',
        'active',
        'auto_update',
        'expiration',
        'info',
      ],
      brief => [
        'name',
        'zone',
      ]
    }
  },
  RRADDR => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      ipblock => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'arecords',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'Ipblock',
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'arecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS A or AAAA Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'ipblock',
      'rr'
    ],
    primary_key => 'id',
    unique => [
      [
        'rr',
        'ipblock'
      ]
    ],
    views => {
      all => [
        'ipblock',
        'rr',
        'ttl'
      ],
      brief => [
        'ipblock',
        'rr'
      ]
    }
  },
  RRCNAME => {
    columns => {
      alias => {
        default => '',
        description => '',
        length => '128',
        nullable => 0,
        tag => 'Alias',
        type => 'varchar'
      },
      cname => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'aliases',
          table => 'RR'
        },
        nullable => 0,
        tag => 'CNAME',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS CNAME Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'alias',
      'cname'
    ],
    primary_key => 'id',
    unique => [
      [
        'alias',
        'cname'
      ]
    ],
    views => {
      all => [
        'alias',
        'cname',
        'ttl'
      ],
      brief => [
        'alias',
        'cname'
      ]
    }
  },
  RRHINFO => {
    columns => {
      cpu => {
        default => '',
        description => '',
        length => '32',
        nullable => 0,
        tag => 'CPU',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      os => {
        default => '',
        description => '',
        length => '32',
        nullable => 0,
        tag => 'OS',
        type => 'varchar'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'hinforecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS HINFO Record',
    has_history => 0,
    index => [
      [
        'rr'
      ]
    ],
    isjoin => '0',
    label => [
      'cpu',
      'os',
      'rr'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'cpu',
        'os',
        'rr',
        'ttl'
      ],
      brief => [
        'cpu',
        'os',
        'rr'
      ]
    }
  },
  RRMX => {
    columns => {
      exchange => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'mxrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Exchange',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      preference => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Preference',
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'mxrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS MX Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'preference',
      'exchange',
      'rr'
    ],
    primary_key => 'id',
    unique => [
      [
        'rr',
        'exchange'
      ]
    ],
    views => {
      all => [
        'preference',
        'exchange',
        'rr',
        'ttl'
      ],
      brief => [
        'preference',
        'exchange',
        'rr'
      ]
    }
  },
  RRNS => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      nsdname => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'nsrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Name Server',
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'nsrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS NS Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'nsdname',
      'rr'
    ],
    primary_key => 'id',
    unique => [
      [
        'rr',
        'nsdname'
      ]
    ],
    views => {
      all => [
        'nsdname',
        'rr',
        'ttl'
      ],
      brief => [
        'nsdname',
        'rr'
      ]
    }
  },
  RRPTR => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      ipblock => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'ptrrecords',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => 'IP',
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'ptrrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      }
    },
    description => 'DNS PTR Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'ipblock',
      'rr'
    ],
    primary_key => 'id',
    unique => [
      [
        'rr',
        'ipblock'
      ]
    ],
    views => {
      all => [
        'ipblock',
        'rr',
        '',
        'ttl'
      ],
      brief => [
        'ipblock',
        'rr'
      ]
    }
  },
  RRSRV => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      port => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Port',
        type => 'integer'
      },
      priority => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Priority',
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'srvrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      target => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'srvrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Target',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      },
      weight => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Weight',
        type => 'integer'
      }
    },
    description => 'DNS SRV Record',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'target',
      'rr'
    ],
    primary_key => 'id',
    unique => [
      [
        'rr',
        'target'
      ]
    ],
    views => {
      all => [
        'rr',
        'ttl',
        'priority',
        'weight',
        'port',
        'target'
      ],
      brief => [
        'target',
        'rr'
      ]
    }
  },
  RRTXT => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      rr => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'txtrecords',
          table => 'RR'
        },
        nullable => 0,
        tag => 'Resource Record',
        type => 'integer'
      },
      ttl => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'TTL',
        type => 'integer'
      },
      txt => {
        default => '',
        description => '',
        length => '128',
        nullable => 1,
        tag => 'Text',
        type => 'varchar'
      }
    },
    description => 'DNS TXT Record',
    has_history => 0,
    index => [
      [
        'rr'
      ]
    ],
    isjoin => '0',
    label => [
      'txt',
      'rr'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'txt',
        'rr',
        'ttl'
      ],
      brief => [
        'txt',
        'rr'
      ]
    }
  },
  RRType => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      tablename => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Table',
        type => 'varchar'
      }
    },
    description => 'Resource Record Types and their tables',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'tablename'
      ],
      brief => [
        'name',
        'tablename'
      ]
    }
  },
  Room => {
    columns => {
      floor => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'rooms',
          table => 'Floor'
        },
        nullable => 0,
        tag => 'Floor',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Number',
        type => 'varchar'
      }
    },
    description => 'Room',
    has_history => 0,
    index => [
      [
        'name'
      ],
      [
        'floor'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name',
        'floor'
      ]
    ],
    views => {
      all => [
        'name',
        'floor'
      ],
      brief => [
        'name',
        'floor'
      ]
    }
  },
  Service => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      }
    },
    description => 'An Internet service',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'info'
      ],
      brief => [
        'name'
      ]
    }
  },
  Site => {
    columns => {
      aliases => {
        default => '',
        description => 'Alternative names for this site',
        length => '255',
        nullable => 0,
        tag => 'Aliases',
        type => 'varchar'
      },
      availability => {
        default => '',
        description => 'Time Period during which people at this Site will be available',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'sites',
          table => 'Availability'
        },
        nullable => 0,
        tag => 'Availability',
        type => 'integer'
      },
      city => {
        default => '',
        description => 'City where this Site is located',
        length => '64',
        nullable => 1,
        tag => 'City',
        type => 'varchar'
      },
      contactlist => {
        default => '',
        description => 'List of contacts for this Site',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'sites',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      country => {
        default => '',
        description => 'Country where this Site is located',
        length => '64',
        nullable => 1,
        tag => 'Country',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'User Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Name given to this site',
        length => '64',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      number => {
        default => '',
        description => 'A unique identifier for this Site within the organization',
        length => '64',
        nullable => 1,
        tag => 'Site ID',
        type => 'varchar'
      },
      pobox => {
        default => '',
        description => 'Post Office Box',
        length => '32',
        nullable => 1,
        tag => 'P.O. Box',
        type => 'varchar'
      },
      state => {
        default => '',
        description => 'State where this Site is located',
        length => '32',
        nullable => 1,
        tag => 'State',
        type => 'varchar'
      },
      street1 => {
        default => '',
        description => 'Street 1st line',
        length => '128',
        nullable => 1,
        tag => 'Street (1)',
        type => 'varchar'
      },
      street2 => {
        default => '',
        description => 'Street 2nd line',
        length => '128',
        nullable => 1,
        tag => 'Street (2)',
        type => 'varchar'
      },
      zip => {
        default => '',
        description => 'ZIP/Postal Code',
        length => '16',
        nullable => 1,
        tag => 'Zip/Postal Code',
        type => 'varchar'
      }
    },
    description => 'A physical location such as a building or data center.',
    has_history => 1,
    index => [
      [
        'street1'
      ],
      [
        'name'
      ],
      [
        'number'
      ]
    ],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ],
    ],
    views => {
      all => [
        'name',
        'number',
        'aliases',
        'street1',
        'street2',
        'pobox',
        'city',
        'state',
        'zip',
        'country',
        'availability',
        'contactlist',
        'info'
      ],
      brief => [
        'name',
        'number',
        'street1',
        'city'
      ]
    }
  },
  STPInstance => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      number => {
        default => '',
        description => 'STP Instance number',
        length => '',
        nullable => 1,
        tag => 'Number',
        type => 'integer'
      },
      device => {
        default => '',
        description => 'Device where this STP instance exists',
        length => '',
        linksto => {
          cascade => 'Delete',
          order_by => 'number',
          method => 'stp_instances',
          table => 'Device'
        },
        nullable => 0,
        tag => 'Device',
        type => 'integer'
      },
      root_bridge => {
        default => '',
        description => 'Root bridge MAC Address',
        length => '12',
        nullable => 1,
        tag => 'Root Bridge',
        type => 'varchar'
      },
      bridge_priority => {
        default => '',
        description => 'Bridge priority',
        length => '',
        nullable => 1,
        tag => 'Bridge Priority',
        type => 'integer'
      },
      root_port => {
        default => '',
        description => 'Root port (ifIndex) for this STP instance',
        length => '',
        nullable => 0,
        tag => 'Root Port',
        type => 'integer'
      },
    },
    description => 'Spanning Tree Protocol Instance',
    has_history => 0,
    index => [
      [
        'root_bridge'
      ],
    ],
    isjoin => '0',
    label => [
      'number',
      'device'
    ],
    primary_key => 'id',
    unique => [
      [
        'device',
        'number'
      ]
    ],
    views => {
      all => [
        'number',
        'device',
        'root_port',
        'root_bridge',
        'bridge_priority',
      ],
      brief => [
        'number',
        'device',
        'root_port',
        'root_bridge',
        'bridge_priority',
      ]
    }
  },
  ClosetPicture => {
    columns => {
      bindata => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Picture',
        type => 'longblob'
      },
      closet => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'pictures',
          table => 'Closet'
        },
        nullable => 0,
        tag => 'Closet',
        type => 'integer'
      },
      filename => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Name',
        type => 'varchar'
      },
      filesize => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Size',
        type => 'varchar'
      },
      filetype => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Type',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
    },
    description => 'A Closet Picture.  Pictures are stored in the database in binary format.',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'filename'
    ],
    primary_key => 'id',
    unique => [
      [
        'filename', 'closet'
      ]
    ],
    views => {
      all => [
        'filename',
        'filesize',
        'filetype',
        'bindata',
        'closet',
        'info',
      ],
      brief => [
        'filename',
        'filetype',
        'info',
      ]
    }
  },
  FloorPicture => {
    columns => {
      bindata => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Picture',
        type => 'longblob'
      },
      floor => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'pictures',
          table => 'Floor'
        },
        nullable => 0,
        tag => 'Floor',
        type => 'integer'
      },
      filename => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Name',
        type => 'varchar'
      },
      filesize => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Size',
        type => 'varchar'
      },
      filetype => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Type',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
    },
    description => 'A Floor Picture.  Pictures are stored in the database in binary format.',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'filename'
    ],
    primary_key => 'id',
    unique => [
      [
        'filename', 'floor'
      ]
    ],
    views => {
      all => [
        'filename',
        'filesize',
        'filetype',
        'bindata',
        'floor',
        'info',
      ],
      brief => [
        'filename',
        'filetype',
        'info',
      ]
    }
  },
  SitePicture => {
    columns => {
      bindata => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Picture',
        type => 'longblob'
      },
      site => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'pictures',
          table => 'Site'
        },
        nullable => 0,
        tag => 'Site',
        type => 'integer'
      },
      filename => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Name',
        type => 'varchar'
      },
      filesize => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Size',
        type => 'varchar'
      },
      filetype => {
        default => '',
        description => '',
        length => '64',
        nullable => 0,
        tag => 'File Type',
        type => 'varchar'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => 'Comments',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
    },
    description => 'A Site Picture.  Pictures are stored in the database in binary format.',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'filename'
    ],
    primary_key => 'id',
    unique => [
      [
        'filename', 'site'
      ]
    ],
    views => {
      all => [
        'filename',
        'filesize',
        'filetype',
        'bindata',
        'site',
        'info',
      ],
      brief => [
        'filename',
        'filetype',
        'info',
      ]
    }
  },
  Splice => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => undef,
        type => 'blob'
      },
      strand1 => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'splices',
          table => 'CableStrand'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      strand2 => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'splices',
          table => 'CableStrand'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      }
    },
    description => 'Cable Splices',
    has_history => 0,
    index => [
      [
        'strand1'
      ],
      [
        'strand2'
      ]
    ],
    isjoin => '0',
    label => [
      'strand1',
      'strand2'
    ],
    primary_key => 'id',
    unique => [],
    views => {
      all => [
        'strand1',
        'strand2'
      ],
      brief => [
        'strand1',
        'strand2'
      ]
    }
  },
  StrandStatus => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => undef,
        type => 'blob'
      },
      name => {
        default => '',
        description => '',
        length => '128',
        nullable => 0,
        tag => undef,
        type => 'varchar'
      }
    },
    description => 'Cable strand/pair status',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'name'
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name'
      ],
      brief => [
        'name'
      ]
    }
  },
  SubnetZone => {
    columns => {
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      subnet => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'zones',
          table => 'Ipblock'
        },
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      zone => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'subnets',
          table => 'Zone'
        },
        nullable => 0,
        tag => 'Zone',
        type => 'integer'
      }
    },
    description => 'IP Subnet to DNS Zone join table',
    has_history => 0,
    index => [],
    isjoin => '1',
    label => [
      'subnet',
      'zone'
    ],
    primary_key => 'id',
    unique => [
      [
        'subnet',
        'zone'
      ]
    ],
    views => {
      all => [
        'subnet',
        'zone'
      ],
      brief => [
        'subnet',
        'zone'
      ]
    }
  },
  Vlan => {
    columns => {
      description => {
        default => '',
        description => '',
        length => '255',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      vlangroup => {
        default => '',
        description => 'VLAN group to which this VLAN belongs',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'vlans',
          table => 'VlanGroup'
        },
        nullable => 0,
        tag => 'Group',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'Human-defined Name for this VLAN',
        length => '255',
        nullable => 1,
        tag => 'Name',
        type => 'varchar'
      },
      vid => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'VLAN ID',
        type => 'integer'
      }
    },
    description => 'A Virtual LAN',
    has_history => 0,
    index => [
      [ 'vlangroup' ],
    ],
    isjoin => '0',
    label => [
      'vid', 
    ],
    primary_key => 'id',
    unique => [
      [
        'vid',
      ]
    ],
    views => {
      all => [
        'vid',
        'name',
        'vlangroup',
        'description',
        'info'
      ],
      brief => [
        'vid',
        'name',
        'description'
      ]
    }
  },
  VlanGroup => {
    columns => {
      description => {
        default => '',
        description => 'A short description for this VlanGroup',
        length => '255',
        nullable => 1,
        tag => 'Description',
        type => 'varchar'
      },
      end_vid => {
        default => '',
        description => 'Last VLAN number',
        length => '',
        nullable => 0,
        tag => 'End',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      name => {
        default => '',
        description => 'A name identifying this VLAN group',
        length => '128',
        nullable => 0,
        tag => 'Name',
        type => 'varchar'
      },
      start_vid => {
        default => '',
        description => 'First VLAN number',
        length => '',
        nullable => 0,
        tag => 'Start',
        type => 'integer'
      },
    },
    description => 'A Virtual LAN Group',
    has_history => 1,
    index => [],
    isjoin => '0',
    label => [
      'name', 
    ],
    primary_key => 'id',
    unique => [
      [
        'name'
      ]
    ],
    views => {
      all => [
        'name',
        'start_vid',
        'end_vid',
        'description',
        'info'
      ],
      brief => [
        'name',
        'description',
        'start_vid',
        'end_vid',
      ]
    }
  },
  Zone => {
    columns => {
      active => {
        default => '',
        description => 'Whether a DNS zone file should be generated for this Zone',
        length => '',
        nullable => 0,
        tag => 'Active?',
        type => 'bool'
      },
      contactlist => {
        default => '',
        description => '',
        length => '',
        linksto => {
          cascade => 'Nullify',
          method => 'zones',
          table => 'ContactList'
        },
        nullable => 0,
        tag => 'Contact List',
        type => 'integer'
      },
      expire => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Expire',
        type => 'integer'
      },
      id => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => undef,
        type => 'integer'
      },
      info => {
        default => '',
        description => '',
        length => '',
        nullable => 1,
        tag => 'Comments',
        type => 'blob'
      },
      masterserver => {
        default => '',
        description => 'Reference to an IP service.',
        length => '',
        linksto => {
          cascade => 'Delete',
          method => 'zones',
          table => 'IpService'
        },
        nullable => 0,
        tag => 'Master Server',
        type => 'integer'
      },
      minimum => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Minimum',
        type => 'integer'
      },
      mname => {
        default => '',
        description => '',
        length => '128',
        nullable => 0,
        tag => 'Domain Name',
        type => 'varchar'
      },
      refresh => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Refresh',
        type => 'integer'
      },
      retry => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Retry',
        type => 'integer'
      },
      reverse => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Reverse?',
        type => 'bool'
      },
      rname => {
        default => '',
        description => '',
        length => '128',
        nullable => 0,
        tag => 'Mail Box',
        type => 'varchar'
      },
      serial => {
        default => '',
        description => '',
        length => '',
        nullable => 0,
        tag => 'Serial',
        type => 'integer'
      }
    },
    description => 'A DNS Zone',
    has_history => 0,
    index => [],
    isjoin => '0',
    label => [
      'mname'
    ],
    primary_key => 'id',
    unique => [
      [
        'mname'
      ]
    ],
    views => {
      all => [
        'mname',
        'rname',
        'serial',
        'refresh',
        'retry',
        'expire',
        'minimum',
        'contactlist',
        'active',
        'reverse',
        'masterserver',
        'info'
      ],
      brief => [
        'mname',
        'masterserver'
      ]
    }
  }
 }
}
