#
# Make the necessary modifications to upgrade Netdot's schema and data
#
#
# This script modifies a 0.8.* schema into current version (0.9)
#
# To developers:
# In the future we can consider:
#   1. making a temp table (in the same db) with the new table definition
#   2. copy data over
#   3. delete the old table and rename the new one over
# We can explicitly specify the names of tables that have changed.
# This method should work, and it's probably easier than current method.
#
# Also note: 0.7->0.8 updatedb uses a different approach:
# It creates a new database and copies everything over.
# See /tags/netdot-0.8.1/bin/updatedb for more info
#

use strict;
use lib "../lib";
use DBUTIL;
use Netdot;
use Netdot::Model;

my %CONFIG;
$CONFIG{debug}             = 1;
$CONFIG{keep_history}      = 1;
$CONFIG{keep_dependencies} = 0;

foreach my $var ( qw /DB_TYPE DB_HOME DB_HOST DB_PORT DB_DBA DB_DBA_PASSWORD 
		  DB_NETDOT_USER DB_NETDOT_PASS DB_DATABASE/ ){
    $CONFIG{$var} = Netdot->config->get($var);
}

my $dbh = &dbconnect($CONFIG{DB_TYPE}, $CONFIG{DB_HOST}, $CONFIG{DB_PORT}, 
			$CONFIG{DB_DBA}, $CONFIG{DB_DBA_PASSWORD}, $CONFIG{DB_DATABASE});


my @statements = (
    "ALTER TABLE `backbonecable_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `cablestrand` DROP COLUMN `datetested`",
    "ALTER TABLE `cablestrand` DROP COLUMN `direction`",
    "ALTER TABLE `cablestrand` DROP COLUMN `loss`",
    "ALTER TABLE `cablestrand_history` DROP COLUMN `datetested`",
    "ALTER TABLE `cablestrand_history` DROP COLUMN `direction`",
    "ALTER TABLE `cablestrand_history` DROP COLUMN `loss`",
    "ALTER TABLE `cablestrand_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `circuit` ADD COLUMN `datetested` date",
    "ALTER TABLE `circuit` ADD COLUMN `loss` varchar(32)",
    "ALTER TABLE `circuit_history` ADD COLUMN `datetested` date",
    "ALTER TABLE `circuit_history` ADD COLUMN `loss` varchar(32)",
    "ALTER TABLE `circuit_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `contact_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `device` DROP COLUMN `person`",
    "ALTER TABLE `device` MODIFY `oobname` varchar(255)",
    "ALTER TABLE `device` ADD COLUMN `auto_dns` bool NOT NULL",
    "ALTER TABLE `device_history` DROP COLUMN `person`",
    "ALTER TABLE `device_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `device_history` ADD COLUMN `auto_dns` bool NOT NULL",
    "ALTER TABLE `dhcpattr` DROP INDEX dhcpattr1",
    "ALTER TABLE `dhcpattr` ADD INDEX dhcpattr1 (`name`, `scope`)",
    "ALTER TABLE `dhcpscope` CHANGE `fixed_address` `ipblock` integer NOT NULL",
    "ALTER TABLE `dhcpscope` CHANGE `info` `text` blob",
    "ALTER TABLE `dhcpscope` CHANGE `parent` `container` integer NOT NULL",
    "ALTER TABLE `dhcpscope` DROP COLUMN `subnet`",
    "ALTER TABLE `dhcpscope` ADD COLUMN `export_file` varchar(255) NOT NULL",
    "ALTER TABLE `dhcpscope` ADD COLUMN `enable_failover` bool NOT NULL",
    "ALTER TABLE `dhcpscope` ADD COLUMN `failover_peer` varchar(128) NOT NULL",
    "ALTER TABLE `dhcpscope` DROP INDEX DhcpScope2",
    "ALTER TABLE `dhcpscope` ADD INDEX DhcpScope2 (`ipblock`)",
    "ALTER TABLE `dhcpscope` ADD INDEX DhcpScope4 (`physaddr`)",
    "ALTER TABLE `entity_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `interface` ADD COLUMN `ignore_ip` bool NOT NULL",
    "ALTER TABLE `interface` ADD COLUMN `auto_dns` bool NOT NULL",
    "ALTER TABLE `interface_history` ADD COLUMN `ignore_ip` bool NOT NULL",
    "ALTER TABLE `interface_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `interface_history` ADD COLUMN `auto_dns` bool NOT NULL",
    "ALTER TABLE `ipblock` DROP COLUMN `dhcp_enabled`",
    "ALTER TABLE `person` MODIFY `email` varchar(255)",
    "ALTER TABLE `person` MODIFY `emailpager` varchar(255)",
    "ALTER TABLE `person` ADD COLUMN `user_type` integer",
    "ALTER TABLE `person` ADD COLUMN `username` varchar(128)",
    "ALTER TABLE `person` ADD COLUMN `password` varchar(255)",
    "ALTER TABLE `person_history` MODIFY `email` varchar(255)",
    "ALTER TABLE `person_history` MODIFY `emailpager` varchar(255)",
    "ALTER TABLE `person_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `person_history` ADD COLUMN `user_type` integer",
    "ALTER TABLE `person_history` ADD COLUMN `username` varchar(128)",
    "ALTER TABLE `person_history` ADD COLUMN `password` varchar(255)",
    "ALTER TABLE `product_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `rr` DROP INDEX RR3",
    "ALTER TABLE `rr` DROP INDEX RR4",
    "ALTER TABLE `rr` ADD INDEX RR3 (`expiration`)",
    "ALTER TABLE `rraddr` ADD INDEX RRADDR2 (`ipblock`)",
    "ALTER TABLE `rrcname` CHANGE `cname` `rr` integer NOT NULL",
    "ALTER TABLE `rrcname` CHANGE `alias` `cname` varchar(128) NOT NULL",
    "ALTER TABLE `rrcname` DROP INDEX rrcname1",
    "ALTER TABLE `rrcname` ADD UNIQUE INDEX rrcname1 (`rr`)",
    "ALTER TABLE `rrcname` ADD INDEX RRCNAME2 (`cname`)",
    "ALTER TABLE `rrmx` MODIFY `exchange` varchar(255) NOT NULL",
    "ALTER TABLE `rrmx` MODIFY `preference` integer NOT NULL DEFAULT '0'",
    "ALTER TABLE `rrmx` ADD INDEX RRMX2 (`exchange`)",
    "ALTER TABLE `rrns` MODIFY `nsdname` varchar(255) NOT NULL",
    "ALTER TABLE `rrns` ADD INDEX RRNS2 (`nsdname`)",
    "ALTER TABLE `rrptr` ADD COLUMN `ptrdname` varchar(255) NOT NULL",
    "ALTER TABLE `rrptr` DROP INDEX rrptr1",
    "ALTER TABLE `rrptr` ADD UNIQUE INDEX rrptr1 (`ptrdname`, `ipblock`)",
    "ALTER TABLE `rrptr` ADD INDEX RRPTR2 (`ipblock`)",
    "ALTER TABLE `rrptr` ADD INDEX RRPTR3 (`rr`)",
    "ALTER TABLE `rrsrv` MODIFY `port` integer NOT NULL",
    "ALTER TABLE `rrsrv` MODIFY `priority` integer NOT NULL DEFAULT '0'",
    "ALTER TABLE `rrsrv` MODIFY `target` varchar(255) NOT NULL",
    "ALTER TABLE `rrsrv` MODIFY `weight` integer NOT NULL DEFAULT '0'",
    "ALTER TABLE `rrsrv` DROP INDEX rrsrv1",
    "ALTER TABLE `rrsrv` ADD UNIQUE INDEX rrsrv1 (`rr`, `port`, `target`)",
    "ALTER TABLE `rrsrv` ADD INDEX RRSRV2 (`target`)",
    "ALTER TABLE `rrtxt` CHANGE `txt` `txtdata` varchar(128)",
    "ALTER TABLE `rrtxt` ADD INDEX RRTXT2 (`txtdata`)",
    "ALTER TABLE `site_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `sitelink_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `vlangroup_history` MODIFY `modifier` varchar(255)",
    "ALTER TABLE `zone` ADD COLUMN `default_ttl` integer NOT NULL",
    "ALTER TABLE `zone` ADD COLUMN `export_file` varchar(255) NOT NULL",
    "ALTER TABLE `zone` DROP COLUMN `masterserver`",
    "ALTER TABLE `zone` CHANGE COLUMN `mname` `name` varchar(128) NOT NULL",
    "ALTER TABLE `zone` ADD COLUMN `mname` varchar(128) NOT NULL",
    "ALTER TABLE `zone` DROP COLUMN `reverse`",
    "ALTER TABLE `zone` DROP INDEX zone1",
    "ALTER TABLE `zone` ADD UNIQUE INDEX zone1 (`name`)",
    "DROP TABLE `rrtype`",
    "CREATE TABLE `accessright` (
       `access` varchar(128) NOT NULL,
       `id` integer NOT NULL auto_increment,
       `object_class` varchar(128) NOT NULL,
       `object_id` integer NOT NULL,
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `userright` (
       `accessright` integer NOT NULL,
       `id` integer NOT NULL auto_increment,
       `person` integer NOT NULL,
       UNIQUE INDEX userright1 (`person`, `accessright`),
       PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;",
    "CREATE TABLE `usertype` (
       `id` integer NOT NULL auto_increment,
       `info` blob,
       `name` varchar(128) NOT NULL,
       UNIQUE INDEX usertype1 (`name`),
       PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;",
    "CREATE TABLE `groupright` (
      `accessright` integer NOT NULL,
      `contactlist` integer NOT NULL,
      `id` integer NOT NULL auto_increment,
      UNIQUE INDEX groupright1 (`contactlist`, `accessright`),
      PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
     "CREATE TABLE `rrds` (
       `algorithm` integer NOT NULL,
       `digest` varchar(255),
       `digest_type` integer NOT NULL,
       `id` integer NOT NULL auto_increment,
       `key_tag` integer NOT NULL,
       `rr` integer NOT NULL,
       `ttl` varchar(32),
       UNIQUE INDEX rrds1 (`rr`, `key_tag`),
       INDEX RRDS2 (`key_tag`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `rrloc` (
       `altitude` integer NOT NULL,
       `horiz_pre` varchar(32),
       `id` integer NOT NULL auto_increment,
       `latitude` integer NOT NULL,
       `longitude` integer NOT NULL,
       `rr` integer NOT NULL,
       `size` varchar(32),
       `ttl` varchar(32),
       `vert_pre` varchar(32),
       UNIQUE INDEX rrloc1 (`rr`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `rrnaptr` (
       `flags` varchar(1),
       `id` integer NOT NULL auto_increment,
       `order_field` integer NOT NULL DEFAULT '0',
       `preference` integer NOT NULL DEFAULT '0',
       `regexpr` varchar(255) NOT NULL,
       `replacement` varchar(255) NOT NULL,
       `rr` integer NOT NULL,
       `services` varchar(255) NOT NULL,
       `ttl` varchar(32),
       INDEX RRNAPTR2 (`rr`),
       INDEX RRNAPTR3 (`services`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `zonealias` (
       `id` integer NOT NULL auto_increment,
       `info` blob,
       `name` varchar(128) NOT NULL,
       `zone` integer NOT NULL,
       UNIQUE INDEX zonealias1 (`name`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `dhcpscopeuse` (
       `id` integer NOT NULL auto_increment,
       `scope` integer NOT NULL,
       `template` integer NOT NULL,
       UNIQUE INDEX dhcpscopeuse1 (`scope`, `template`),
       INDEX DhcpScopeUse2 (`template`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `hostaudit` (
       `fields` varchar(255),
       `id` integer NOT NULL auto_increment,
       `operation` varchar(255),
       `record_type` varchar(255),
       `tstamp` timestamp NOT NULL DEFAULT '1970-01-01 00:00:01',
       `user` varchar(255),
       `vals` varchar(255),
       `zone` integer NOT NULL,
       `scope` integer NOT NULL,
       INDEX HostAudit2 (`zone`),
       INDEX HostAudit3 (`scope`),
       INDEX HostAudit4 (`user`),
       INDEX HostAudit5 (`record_type`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
     "CREATE TABLE `sitesubnet` (
       `id` integer NOT NULL auto_increment,
       `site` integer NOT NULL,
       `subnet` integer NOT NULL,
       UNIQUE INDEX sitesubnet1 (`subnet`, `site`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `physaddrattr` (
       `id` integer NOT NULL auto_increment,
       `name` integer NOT NULL,
       `physaddr` integer NOT NULL,
       `value` varchar(255) NOT NULL,
       UNIQUE INDEX physaddrattr1 (`name`, `physaddr`),
       INDEX PhysAddrAttr2 (`physaddr`),
       PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;",
    "CREATE TABLE `physaddrattrname` (
       `id` integer NOT NULL auto_increment,
       `info` blob,
       `name` varchar(128) NOT NULL,
       UNIQUE INDEX physaddrattrname1 (`name`),
       PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;",
    "CREATE TABLE `deviceattr` (
       `device` integer NOT NULL,
       `id` integer NOT NULL auto_increment,
       `name` integer NOT NULL,
       `value` varchar(255) NOT NULL,
       UNIQUE INDEX deviceattr1 (`name`, `device`),
       INDEX DeviceAttr2 (`device`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
     "CREATE TABLE `savedqueries` (
       `id` integer NOT NULL auto_increment,
       `name` varchar(255) NOT NULL,
       `querytext` blob NOT NULL,
        PRIMARY KEY (`id`)
      ) ENGINE=InnoDB;",
    "CREATE TABLE `deviceattrname` (
       `id` integer NOT NULL auto_increment,
       `info` blob,
       `name` varchar(128) NOT NULL,
       UNIQUE INDEX deviceattrname1 (`name`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `ipblockattr` (
       `id` integer NOT NULL auto_increment,
       `ipblock` integer NOT NULL,
       `name` integer NOT NULL,
       `value` varchar(255) NOT NULL,
       UNIQUE INDEX ipblockattr1 (`name`, `ipblock`),
       INDEX IpblockAttr2 (`ipblock`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "CREATE TABLE `ipblockattrname` (
       `id` integer NOT NULL auto_increment,
       `info` blob,
       `name` varchar(128) NOT NULL,
       UNIQUE INDEX ipblockattrname1 (`name`),
       PRIMARY KEY (`id`)
     ) ENGINE=InnoDB;",
    "INSERT INTO dhcpscopetype (name) VALUES ('template');",
    "INSERT INTO usertype (name, info) VALUES ('Admin', 'An Admin user has full access to Netdot');",
    "INSERT INTO usertype (name, info) VALUES ('Operator', 'Operators have the same view as Admins, but have read-only access');",
    "INSERT INTO usertype (name, info) VALUES ('User', 'Regular users have a restricted view of objects in Netdot, and can only read and/or write objects depending on the permissions assigned to them.');",

    "INSERT INTO person (lastname, username, user_type, password) VALUES ('Admin', 'admin', '1', 'jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg');",
    "INSERT INTO person (lastname, username, user_type, password) VALUES ('Operator', 'operator', '2', 'BuVbYzSB97sHKVfqvPEQyXLoZpHDz+2r4IgCS//kLyM');",
    "INSERT INTO person (lastname, username, user_type, password) VALUES ('Guest', 'guest', '3', 'hJg8YPfarcHLhphiH4AsDZ+aPDwpXIEHSPsEgRXBhuw');",
    "INSERT INTO ipblockstatus (name) VALUES ('Available');",
    "DELETE FROM dhcpattrname;",
    "INSERT INTO dhcpattrname (name) VALUES ('always-reply-rfc1048');",
    "INSERT INTO dhcpattrname (name) VALUES ('allow all clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('allow dynamic bootp client');",
    "INSERT INTO dhcpattrname (name) VALUES ('authoritative');",
    "INSERT INTO dhcpattrname (name) VALUES ('boot-unknown-clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('default-lease-time');",
    "INSERT INTO dhcpattrname (name) VALUES ('deny all clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('deny dynamic bootp client');",
    "INSERT INTO dhcpattrname (name) VALUES ('deny known clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('deny unknown clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('ddns-update-style');",
    "INSERT INTO dhcpattrname (name) VALUES ('dynamic-bootp-lease-length');",
    "INSERT INTO dhcpattrname (name) VALUES ('dynamic-bootp-lease-cutoff');",
    "INSERT INTO dhcpattrname (name) VALUES ('get-lease-hostnames');",
    "INSERT INTO dhcpattrname (name) VALUES ('filename');",
    "INSERT INTO dhcpattrname (name) VALUES ('lease limit');",
    "INSERT INTO dhcpattrname (name) VALUES ('log-facility');",
    "INSERT INTO dhcpattrname (name) VALUES ('match');",
    "INSERT INTO dhcpattrname (name) VALUES ('match if');",
    "INSERT INTO dhcpattrname (name) VALUES ('max-lease-time');",
    "INSERT INTO dhcpattrname (name) VALUES ('min-lease-time');",
    "INSERT INTO dhcpattrname (name) VALUES ('min-secs');",
    "INSERT INTO dhcpattrname (name) VALUES ('next-server');",
    "INSERT INTO dhcpattrname (name) VALUES ('not authoritative');",
    "INSERT INTO dhcpattrname (name) VALUES ('permit known clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('permit unknown clients');",
    "INSERT INTO dhcpattrname (name) VALUES ('range');",
    "INSERT INTO dhcpattrname (name) VALUES ('server-identifier');",
    "INSERT INTO dhcpattrname (name) VALUES ('server-name');",
    "INSERT INTO dhcpattrname (name) VALUES ('site-option-space');",
    "INSERT INTO dhcpattrname (name) VALUES ('use-host-decl-names');",
    "INSERT INTO dhcpattrname (name) VALUES ('use-lease-addr-for-default-route');",
    "INSERT INTO dhcpattrname (name) VALUES ('vendor-option-space');",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option subnet-mask', '1', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option time-offset', '2', 'signed integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option routers', '3', 'array if ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option time-servers', '4', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option ien116-name-servers', '5', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option domain-name-servers', '6', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option log-servers', '7', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option cookie-servers', '8', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option lpr-servers', '9', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option imporess-servers', '10', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option resource-location-servers', '11', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option host-name', '12', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option boot-size', '13', 'unsigned integer 16' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option merit-dump', '14', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option domain-name', '15', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option swap-server', '16', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option root-path', '17', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option extensions-path', '18', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option ip-forwarding', '19', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option non-local-source-routing', '20', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option policy-filter', '21', 'array of { ip-address, ip-address }' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option max-dgram-reassembly', '22', 'unsigned integer 16' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option default-ip-ttl', '23', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option path-mtu-aging-timeout', '24', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option path-mtu-plateau-table', '25', 'array of unsigned integer 16' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option interface-mtu', '26', 'unsigned integer 16' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option all-subnets-local', '27', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option broadcast-address', '28', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option perform-mask-discovery', '29', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option mask-supplier', '30', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option router-discovery', '31', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option router-solicitation-address', '32', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option static-routes', '33', 'array of { ip-address, ip-address }' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option trailer-encapsulation', '34', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option arp-cache-timeout', '35', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option ieee802-3-encapsulation', '36', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option default-tcp-ttl', '37', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option tcp-keepalive-internal', '38', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option tcp-keepalive-garbage', '39', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nis-domain', '40', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nis-servers', '41', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option ntp-servers', '42', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option vendor-encapsulated-options', '43', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option netbios-name-servers', '44', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option netbios-dd-server', '45', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option netbios-node-type', '46', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option netbios-scope', '47', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option font-servers', '48', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option x-display-manager', '49', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-requested-address', '50', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-lease-time', '51', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-option-overload', '52', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-message-type', '53', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-server-identifier', '54', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-parameter-request-list', '55', 'array of unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-message', '56', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-max-message-size', '57', 'unsigned integer 16' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-renewal-time', '58', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-rebinding-time', '59', 'unsigned integer 32' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option vendor-class-identifier', '60', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option dhcp-client-identifier', '61', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip-domain', '62', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nisplus-domain', '64', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nisplus-servers', '65', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option tftp-server-name', '66', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option bootfile-name', '67', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option mobile-ip-home-agent', '68', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option smtp-server', '69', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option pop-server', '70', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nntp-server', '71', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option www-server', '72', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option finger-server', '73', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option irc-server', '74', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option streettalk-server', '75', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option streettalk-directory-assistance-server', '76', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option slp-directory-agent', '78', 'array of { boolean, ip-address }' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nds-servers', '85', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nds-tree-name', '86', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nds-context', '87', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option uap-servers', '98', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option subnet-selection', '118', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.nsq-broadcast', '5', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.preferred-dss', '6', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.nearest-nwip-server', '7', 'array of ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.autoretries', '', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.autoretry-secs', '', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.nwip-1-1', '', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option nwip.primary-dss', '', 'ip-address' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.no-client-update', '', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.server-update', '', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.encoded', '', 'boolean' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.rcode1', '', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.rcode2', '', 'unsigned integer 8' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.hostname', '', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.domainname', '', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option fqdn.fqdn', '', 'text' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option agent.circuit-id', '1', 'string' );",
    "INSERT INTO dhcpattrname (name, code, format) VALUES ('option agent.remote-id', '2', 'string' );",

    );

my @ttlchange = ("rraddr",
		 "rrcname",
		 "rrhinfo",
		 "rrmx",
		 "rrns",
		 "rrptr",
		 "rrsrv",
		 "rrtxt",
    );

my %timeStampChangeNotNull = ( "arpcache"     => "tstamp",
			       "devicemodule" => "date_installed",
			       "devicemodule" => "last_updated",
			       "fwtable"      => "tstamp",
			       "ipblock"      => "first_seen",
			       "ipblock"      => "last_seen",
			       "physaddr"     => "first_seen",
			       "physaddr"     => "last_seen",
    );

my %timeStampChangeNull = ( "device"         => "date_installed",
			    "device"         => "last_arp",
			    "device"         => "last_fwt",
			    "device"         => "last_updated",
			    "device_history" => "date_installed",
			    "device_history" => "last_arp",
			    "device_history" => "last_fwt",
			    "device_history" => "last_updated",
    );

foreach my $t (@ttlchange) {
    push (@statements, "ALTER TABLE `$t` MODIFY `ttl` varchar(32)");
}

foreach my $t (keys %timeStampChangeNotNull) {
    push (@statements, "ALTER TABLE `$t` MODIFY `$timeStampChangeNotNull{$t}` timestamp NOT NULL DEFAULT '1970-01-01 00:00:01'");
}

foreach my $t (keys %timeStampChangeNull) {
    push (@statements, "ALTER TABLE `$t` MODIFY `$timeStampChangeNull{$t}` timestamp DEFAULT '1970-01-01 00:00:01'");
}

push @statements, (
    "ALTER TABLE `interface` ADD COLUMN `circuit` integer NOT NULL",
    "ALTER TABLE `interface` ADD COLUMN `dlci` varchar(64)",
    "ALTER TABLE `interface` ADD INDEX Interface10 (`circuit`)",
    "ALTER TABLE `interface_history` ADD COLUMN `circuit` integer NOT NULL",
    "ALTER TABLE `interface_history` ADD COLUMN `dlci` varchar(64)",
    "ALTER TABLE `interface_history` DROP INDEX Interface_history9",
    "ALTER TABLE `interface_history` ADD INDEX Interface_history9 (`circuit`)",
    "ALTER TABLE `interface_history` ADD INDEX Interface_history10 (`interface_id`)",
    "UPDATE interface,circuit SET interface.circuit=circuit.id, interface.dlci=circuit.dlci 
     WHERE circuit.farend=interface.id OR circuit.nearend=interface.id",
    "ALTER TABLE `circuit` DROP COLUMN `dlci`",
    "ALTER TABLE `circuit` DROP COLUMN `farend`",
    "ALTER TABLE `circuit` DROP COLUMN `nearend`",
    "ALTER TABLE `circuit` DROP INDEX Circuit2",
    "ALTER TABLE `circuit` DROP INDEX Circuit3",
    "ALTER TABLE `circuit` DROP INDEX Circuit4",
    "ALTER TABLE `circuit` ADD INDEX Circuit2 (`linkid`)",
    "ALTER TABLE `circuit_history` DROP COLUMN `dlci`",
    "ALTER TABLE `circuit_history` DROP COLUMN `farend`",
    "ALTER TABLE `circuit_history` DROP COLUMN `nearend`",
    "ALTER TABLE `circuit_history` DROP INDEX Circuit_history1",
    "ALTER TABLE `circuit_history` DROP INDEX Circuit_history2",
    "ALTER TABLE `circuit_history` DROP INDEX Circuit_history3",
    "ALTER TABLE `circuit_history` DROP INDEX Circuit_history4",
    "ALTER TABLE `circuit_history` ADD INDEX Circuit_history1 (`linkid`)",
    "ALTER TABLE `circuit_history` ADD INDEX Circuit_history2 (`circuit_id`)"
   );

###################################################################################
#     Change the number field in closet into a foreign key pointing to room       #
my $closet_handler = $dbh->prepare("SELECT * FROM closet ORDER BY id") or die $dbh->errstr;
$closet_handler->execute() or die $dbh->errstr;

my $room_handler = $dbh->prepare("SELECT * FROM room ORDER BY id") or die $dbh->errstr;
$room_handler->execute() or die $dbh->errstr;

my $cref = $closet_handler->fetchall_hashref('id') or die $dbh->errstr;
my $rref = $room_handler->fetchall_hashref('id') or die $dbh->errstr;

foreach my $ci ( keys(%{$cref}) ){
    my $bool = 0;
    my $ri;
    foreach $ri ( keys(%{$rref}) ){
        if ( ($cref->{$ci}->{number} eq $rref->{$ri}->{name}) && ($cref->{$ci}->{floor} eq $rref->{$ri}->{floor}) ) {
                $bool = 1;
                last;
        }
    } 
    if ($bool){
        push (@statements, 
              "INSERT INTO room (name, floor) VALUES ('$cref->{$ci}->{number}', '$cref->{$ci}->{floor}')"
             );
    }	
}

$closet_handler->finish();
$room_handler->finish();

push (@statements,
      "UPDATE closet, room SET closet.number = room.id 
       WHERE closet.number = room.name AND closet.floor = room.floor",
      "ALTER TABLE `closet` DROP COLUMN `floor`",
      "ALTER TABLE `closet` DROP COLUMN `site`",
      "ALTER TABLE `closet` CHANGE `number` `room` integer NOT NULL",
      "UPDATE device, closet SET device.room = closet.room
       WHERE device.closet = closet.id",
      "ALTER TABLE `device` DROP COLUMN `closet`"
     );

foreach my $st ( @statements ) {
    &debug($st);
    my $sth = $dbh->prepare($st);
    eval {
	$dbh->do($st);
    };
    if ( $@ ) {
	print "FAILED STATEMENT: $st\n";
    }
}

&dbdisconnect($dbh);

sub debug {
    print STDERR "[DEBUG] Executing: ", @_, "\n" if $CONFIG{debug};
}
