
######################################################################
# Do not modify anything here.  Instead, create a file called
# Site.conf in this same dir and copy relevant sections there
# ( inside the $config hash ) changing values as needed.  
# These are only defaults.
######################################################################

my $config = {

#####################################################################
#
# User Interface
#
#####################################################################

# The name of the machine or virtual host where Netdot is located
NETDOTNAME  => 'netdot.localdomain', 

# Max number of items in dynamically generated drop-down lists
DEFAULT_SELECTMAX  => 100,

# Max number of IP records returned by search functions
IPMAXSEARCH => 200,

# At what point do we no longer display the number of 
# hosts available, and switch to percentages?
# Used in ip.html underneath the "Utilization" field
# for an address.
#
SHOW_COUNT_THRESHOLD => 65536,

# Web-based whois server URL for AS number lookups from Netdot's device pages
# Only available substitution is <ASNUMBER>
BGP_AS_WHOIS_URL => "http://www.radb.net/cgi-bin/radb/advanced-query.cgi?searchstr=AS<ASNUMBER>&submit=Query",

#################################################################
#
# Database setup
#
#################################################################

#
# DB_TYPE defines what sort of database NetDoT trys to talk to
# [mysql|Pg]

DB_TYPE =>  'mysql',

# DB_HOME is where the Database's commandline tools live.  $DB_HOME/bin
# should contain the binaries themselves, e.g. if "which mysql" gives
# "/usr/local/mysql/bin/mysql", $DB_HOME should be "/usr/local/mysql"

DB_HOME => '/usr',

# Set DB_DBA to the name of a DB user with permission to create new databases 
# Set DB_DBA_PASSWORD to that user's password (if you don't, you'll be prompted
# later)

# For mysql, you probably want 'root'

DB_DBA          =>  'root',
DB_DBA_PASSWORD =>  '',
 
#
# Set this to the Fully Qualified Domain Name of your database server.
# If the database is local, rather than on a remote host, using "localhost" 
# will greatly enhance performance.

DB_HOST =>  'localhost',

# If you're not running your database server on its default port, 
# specifiy the port the database server is running on below.
# It's generally safe to leave this blank 

DB_PORT => '',

#
# Set this to the canonical name of the interface NetDoT will be talking to the 
# database on.  If you said that the DB_HOST above was "localhost," this 
# should be too. This value will be used to grant NetDoT access to the database.
# If you want to access the NetDoT database from multiple hosts, you'll need
# to grant those database rights by hand.
#

DB_NETDOT_HOST =>  'localhost',

# set this to the name you want to give to the NetDoT database in 
# your database server. 

DB_DATABASE =>  'netdot',

# Set this to the name of the netdot database user

DB_NETDOT_USER =>  'netdot_user',

# Set this to the password used by the NetDoT database user
# *** Change This Before Installation***

DB_NETDOT_PASS =>  'netdot_pass',

#####################################################################
#
# Contact stuff
#
#####################################################################

# Email of the Netdot administrator
ADMINEMAIL  => 'netdot-admin@localdomain', 

# Email of the group that receives Netdot's informational messages
NOCEMAIL  => 'noc@localdomain', 

# Path to Sendmail
SENDMAIL  => '/usr/sbin/sendmail', 

# Contact List that will be assigned by default when inserting
# Devices and other objects
# Note: The Contact List must be inserted manually in the DB
DEFAULT_CONTACTLIST  => 'Network Services Contacts', 

#####################################################################
#
# SNMP specific
#
#####################################################################

DEFAULT_SNMPTIMEOUT      =>  1,
DEFAULT_SNMPRETRIES      =>  0,
DEFAULT_SNMPVERSION      =>  2,
DEFAULT_SNMPCOMMUNITIES  =>  ['public'],
DEFAULT_SNMPBULK         =>  1,

#####################################################################
#
# Logging details
# See Log::Log4perl for more information on these options
#
#####################################################################

LOG_OPTIONS => 	q(
		  log4perl.oneMessagePerAppender           = 1
		  log4perl.category.Netdot                 = ERROR, Syslog
		  log4perl.category.Netdot::Model          = INFO, Syslog
		  log4perl.category.Netdot::Model::Device  = INFO, Syslog
		  log4perl.category.Netdot::UI             = INFO, Syslog
		  log4perl.appender.Syslog                 = Log::Dispatch::Syslog
		  log4perl.appender.Syslog.ident           = netdot
		  log4perl.appender.Syslog.facility        = local0
		  log4perl.appender.Syslog.min_level       = debug
		  log4perl.appender.Syslog.layout          = Log::Log4perl::Layout::SimpleLayout
		  ),

#####################################################################
#
# Device Management
#
#####################################################################

# Owner entity that will be assigned by default when inserting Devices
# Note: The Entity must be inserted manually in the DB
DEFAULT_DEV_OWNER  => 'Network Services',

# List of devices to be completely ignored when 
# discovering.
# Key is sysObjectId

IGNOREDEVS  => { '1.3.6.1.4.1.11.2.3.9.1' => '' },

# Ignore interfaces containing these strings in their names

IFRESERVED  => "pimd|vt-|tap|pe-|pd-|dsc|rptr|unrouted",

# Do not add or remove ports for these devices
# i.e. HP-ICF-OID::hpAdvStkEnetSHAgent:
# These hubs assign a random value for the port group number
# every time they reboot.  For that reason we maintain their 
# ports manually 

IGNOREPORTS  => { '1.3.6.1.4.1.11.2.3.7.8.2.5' => '' },

# Device Interfaces Defaults
# These are the default values of flags to be set
# when the Interface is first inserted.
# These can be changed on each Interface.
#
# Whether Interfaces should be monitored by default
IF_MONITORED => 1,
#
# Whether Interfaces should be SNMP-managed by default
IF_SNMP => 1,
#
# Whether Interface descriptions should be overwritten
# with the values returned from SNMP (ifAlias).
IF_OVERWRITE_DESCR => 0,

# Name to Product Type mapping
#
# Use organization's naming scheme to assign type attribute
# when creating a new product.
# If none of these match, we'll use some key SNMP OIDs to guess.

DEV_NAME2TYPE => {'-ap'        => 'Access Point',
		  '-backbone'  => 'Switch',
		  '-bb'        => 'Switch',
		  '-console'   => 'Console Server', 
		  'dsl'        => 'DSL Modem', 
		  '-fw'        => 'Firewall',
		  '-hub'       => 'Hub',
		  'phone'      => 'IP Phone',
		  '-gw'        => 'Router',
		  '-sw'        => 'Switch',
		  },

# 
# Whether to automatically create peering association
# information when discovering routers
#

ADD_BGP_PEERS => 1,

# 
# Whois query stuff (for BGP peers)
#
# Will query sequentially until
# finding keywords below
# e.g.
#   whois -h whois.radb.net AS 3582
# 
# Might want to disable to speed up router discovery
#
DO_WHOISQ => 1,
 
# Add as many servers as needed.  The keys 'asname' and 'orgname' must not be changed.
# The values to the right of the keys must correspond to the strings used by that
# specific server to identify the AS name and the Organization name.
WHOIS_SERVERS => {
    'whois.radb.net' => { 
	'asname'  => 'as-name',
	'orgname' => 'descr',
    },
},

# Whether subnets should be added automatically when discovering
# a device.  Only routing devices will trigger this event.
# This can be altered when running command-line scripts

ADDSUBNETS => 1,

# Whether subnet owner/user should be inherited from the corresponding
# device, when device is discovered and subnet is created.
# (Assumes 'ADDSUBNETS => 1')

SUBNET_INHERIT_DEV_INFO => 1,

# Unix socket path

SOCK_PATH => '/tmp/netdot_sock',

# Maximum number of processes to fork when doing multiple
# SNMP queries

SNMP_MAX_PROCS => 20,

#####################################################################
#
# DNS
#
#####################################################################

# The Default Domain Name for DNS

DEFAULT_DNSDOMAIN  => 'localdomain',

DEFAULT_DNSREFRESH  => 7200,   #  2 hours
DEFAULT_DNSRETRY    => 900,    # 15 minutes 
DEFAULT_DNSEXPIRE   => 605000, # 7 days 
DEFAULT_DNSMINIMUM  => 86400,  # 1 day (Min. TTL)

# Netdot tries to automate the assignment of DNS names for each
# IP address associated with a Device Interface.  We chose to 
# delegate the logic to a "Plugin" class, which allows users
# to write their own behavior.  We provide two plugins:
#
# 1) DeviceIpNamesFixed: Assigns the main device name to all IPs
# 2) DeviceIpNamesByInt: Assigns names derived from the Interface
# names. e.g. fe-1-0-0.device.localdomain.  Useful in traceroutes.
#
# You can use these as examples to write your own, if none of them 
# suit your needs.

DEVICE_IP_NAME_PLUGIN => "Netdot::Model::Plugins::DeviceIpNamesByInt",



#####################################################################
#
# Misc
#
#####################################################################

# << Make : PREFIX >> =~ s/ //g gets replaced with value of PREFIX by Makefile
TMP => "<<Make:PREFIX>>/tmp",
NETDOT_PATH => "<<Make:PREFIX>>",
}
