<%doc>

Works as a wrapper for the different sections

</%doc>
<%attr>
title      => "Network Documentation Tool"
section    => "Main"
showheader => 1
</%attr>
%
<%init>
my $title   = $m->base_comp->attr('title')   || "Network Documentation Tool";
my $section = $m->base_comp->attr('section') || "Main";
my $user    = Apache2::SiteControl->getCurrentUser($r);
</%init>
%
<%args>
$showheader => $m->base_comp->attr('showheader')
$onload     => ""
</%args>
%
<& header.mhtml,   title => $title, section => $section, user => $user, showheader=>$showheader, onload=>$onload &>
<& section1.mhtml, title => $title, section => $section, user => $user, showheader=>$showheader &>
<div id="content">
% $m->call_next(user => $user);
</div> <!-- close content -->
<& footer.mhtml &>
%
%
<%method .section_dhandler>
    <%doc>
    Defines how section (e.g. /management) dhandlers dhandle.
    This functionality is defined here so that the identical dhandlers
    in the sections won\'t have to be changed if the way section
    dhandling works changes.
    </%doc>
    %
    <%args>
    # NOTE: You *MUST* pass your %ARGS hash when calling this method,
    # so that the post/get arguments make it to the requested page.
    $request # The value of $m->dhandler_arg in the dhandler.
    </%args>
    %
    <%init>
    # The relative path to the directory storing the generic/utility
    # pages, e.g. device.html.  Currently, these pages are at the site
    # root along with this autohandler.  The path becomes more
    # interesting when the utility pages get factored out into a dir
    # of their own.  It might be better to define this path somewhere
    # else, since it is more general than this method, and even more
    # general than this autohandler.
    my $generic_pages_path = ".";
    # $m->dhandler_arg returns the path portion after "./", but not
    # the get/post args (e.g. ?foo=bar&baz=fraz).  The args are passed
    # along in %ARGS.
    $m->comp( "$generic_pages_path/$request", %ARGS );
    </%init>
</%method>
%
%
<%method .sub_print_showtaskslink>
    <%doc>
    This is just a subroutine that was defined in multiple places.  It
    belongs in a perl module, not here, but I wasn\'t sure what perl
    module to put it in, so I am putting it here for now.
    </%doc>
    <%init> 
    return sub {
	my $show_tasks = $_[0];
	my $request_vars = "";
	my $caller_args = $m->caller_args(-1);
	while( my($key, $value) = each(%$caller_args) ) {
	    if( !($key eq "tasks") ) {
		$request_vars .= "$key=$value&";
	    }
	}
	print '<a href="javascript:toggleTasks()" id="tasks_link">['.($show_tasks eq "show"?"hide":"show").']</a>';
    };
    </%init>
</%method>
