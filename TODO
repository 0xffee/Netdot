$Header: /tmp/netdot/src/RCS/TODO,v 1.7 2003/06/03 18:12:04 netdot Exp $
======================================================================

 * Insert Meta information into the database
   status: DONE
   This includes (table)name, columnOrder, linksTo (has_a), linksFrom
   (has_many), and mainObject.

 * a generalized sorting component to present search results in
   status: DONE
   sf is working on this right now; proof-of-concept is done. see
   sortresults.html. 

 * general search
   status: MOSTLY DONE
   This is partly done, but for now is waiting on the component to
   properly sort and present results.

   This still needs the following:
   - DONE -- search the linksto/has_a relationships
   - DONE -- break up multi word searches 
     eg. 'computing center' => 'computing' & 'center'
   - DONE -- aliases 
     at&t is also known as att.  
     wou is also known as western oregon university.
   - specific table searches ?
     specify which table to search

 * update
   status: ADVANCED.  Basic updates work.
   Current problem is updating fields that need a foreign object to be created first.

 * browse
   status: MOSTLY DONE.  Now the expanded view includes buttons to go forward and backwards, 
   first and last, and to specific records within a table.  Feedback pending.

 * create
   status: TESTING
   Much of the work is now done.  Some minor bugs still remain, but
   all of the functionaltiy is there.  Does actual insertions and
   navigation is correct.

 * delete
   status: STARTED
   Problem: We need to somehow specify whether items with has_many relationships should
   be restricted from deletion or if they should be deleted along with all their dependent
   items.  Ideally, this should be specified at installation time and at the middleware layer.
   Users shouldn't be given these options.

 * Access control
   status: PENDING
   Need to design mechanisms for controlling access to the application, and eventually, 
   access to specific functionalities.

 * Discovery of Nodes
   status: PENDING
   Information about Nodes and Interfaces should be fetched and updated via SNMP.

 * history table
   status: PENDING
   We need to track changes in the database.  Some sort of history
   table(s) could accomplish.  Essentially, this would be something
   similar to RCS

 * timestamps
   It'd be nice to know when a given instance was last modified.

