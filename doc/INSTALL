-----------------------------------------------------------------------
REQUIREMENTS
-----------------------------------------------------------------------
* Perl 5.6.1 or later

* Apache2 with mod_perl2

* MySQL (5.x preferred) or PostgreSQL

* Authentication Server.  Netdot supports both Radius and LDAP.

  * For Radius, we recommend FreeRadius, available at:
	
	http://www.freeradius.org/

  * For LDAP, you can try OpenLDAP, available at:
     
        http://www.openldap.org/
	
* The GraphViz package, available at

        http://www.graphviz.org/

* The RRDtool package (with perl modules), available at

        http://oss.oetiker.ch/rrdtool/

* Various Perl modules.  To test for missing modules in your system, run 
  
        % make testdeps
  
  If you're using a system that has the apt-get package manager
  the perl modules can be installed with apt-get (recommended):
	
	% make installdeps-apt-get

  Perl modules can be installed using the CPAN
  (Comprehensive Perl Archive Network):

	% perl -MCPAN -e shell;
	> install <Module::Name>

  If you choose to install the Perl modules using CPAN, you can
  also do:

        % make installdeps

	
----------------------------------------------------------------------
NETDOT CONFIGURATION
----------------------------------------------------------------------

Netdot comes with a configuration file that you need to customize
to your needs.  This file is a Perl hash structure.

* Make a copy of 
	etc/Default.conf
  and call it
	etc/Site.conf

Then modify etc/Site.conf to reflect your specific options.
Netdot will first read Default.conf and then Site.conf.  

The reason for keeping two files is that when an upgrade is performed, 
the Default.conf can be re-written (to add new variables, etc.), without 
overwriting your site-specific configuration.

----------------------------------------------------------------------
UPGRADING
----------------------------------------------------------------------

Check the UPGRADE file.  Depending on which version you are upgrading
to, you might or might not need to run an upgrade process to modify
the DB schema.

----------------------------------------------------------------------
INSTALLING THE PACKAGE FOR THE FIRST TIME
----------------------------------------------------------------------

* Make sure you have created the file

       etc/Site.conf 

  with your custom configurations. (See above).

* From the main directory do:

	% make install [parameters]

  Possible parameters include:

	PREFIX=YOUR-PREFIX (default: /usr/local/netdot) 
	APACHEUSER=USER-YOUR-APACHE-RUNS-AS (default: apache)
	APACHEGROUP=GROUP-YOUR-APACHE-RUNS-AS (default: apache)


* Then, you'll be ready to initialize the database:

	% make installdb

  where you may want to change the values of

	DB_NETDOT_USER=(default: netdot_user)
	DB_NETDOT_PASS=(default: netdot_pass)

  in *bin/Makefile*.

----------------------------------------------------------------------
APACHE CONFIGURATION
----------------------------------------------------------------------

* Edit the supplied template etc/netdot_apache2_<radius|ldap>.conf copy it to
  your apache config dir and include it somewhere in your Apache config (e.g.):

	Include conf/netdot_apache2_<radius|ldap>.conf	

* Edit lib/Netdot/Mason.pm to your needs.  
  Pay attention to the Apache2-only directives, and also the paths.

  In particualar you will need to change some paths if you didn't
  install netdot in /usr/local/netdot (i.e. you specified a custom
  PREFIX).

----------------------------------------------------------------------
CRON JOBS
----------------------------------------------------------------------

Netdot comes with a few scripts that should be run periodically as cron jobs:

 * Retrieval of forwarding tables and ARP caches for IP/MAC address tracking.

 * Devices should be re-discovered via SNMP frequently to maintain an accurate 
   list of ports, ip addresses, etc.

 * Rediscovery of network topology.

 * Netdot keeps history records for some objects every time they are updated.
   With time, old history should be deleted from the database to save disk space.

 * Netdot can generate text documentation that is easy to find via simple
   grepping commands, for example, information about people, locations, 
   device port assignments, etc.  This documentation should be kept up to
   date by exporting it frequently.

 * Configurations for external programs can be generated using Netdot data.
   Current supported programs include: Nagios, Sysmon and Rancid.
   
 * The netdot.cron file included in this package is a sample crontab file
   that you can customize and copy to /etc/cron.d/netdot, containing 
   recommended periodic jobs.

