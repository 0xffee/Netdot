#!/usr/bin/perl

# Generate grep'able circuit info files from Netdot
#
#
use strict;
use lib "/usr/local/netdot/lib";
use Netdot::DBI;
use Data::Dumper;

my $DIR = "/usr/local/netdot/export";
my $DEBUG = 0;

my @files = ( "$DIR/circuits.txt" );

foreach my $f (@files){
    
    open (FILE, ">$f") 
	or die "Couldn't open $f: $!\n";
    select (FILE);
    my @circuits; 
    unless ( @circuits = Circuit->retrieve_all() ){
	die "No circuits found in db\n";
    }
    
    print "            ****        THIS FILE WAS GENERATED FROM A DATABASE         ****\n";
    print "            ****           ANY CHANGES YOU MAKE WILL BE LOST            ****\n";
    print "\n  Generated by $0 on ", scalar(localtime), "\n\n\n";
    
    @circuits = sort { $a->cid cmp $b->cid } @circuits;
    foreach my $c (@circuits){
            my %contacts;
	    my @comments = $c->info;
	    my $prefix = $c->cid . ":" ;
	    $prefix .= " " . $c->connectionid->name if ($c->connectionid);
	    print $prefix, ": Type: ", $c->type->name, "\n" if ($c->type);
	    print $prefix, ": Speed: ", $c->speed, "\n" if ($c->speed);
	    print $prefix, ": Provider: ", $c->vendor->name, "\n" if ($c->vendor);
	    print $prefix, ": DLCI: ", $c->dlci, "\n" if ($c->dlci);
	    print $prefix, ": Near Interface: ", $c->nearend->name, ",", $c->nearend->device->name, "\n" 
	        if ($c->nearend && $c->nearend->device && $c->nearend->device->name);
	    print $prefix, ": Far Interface: ", $c->farend->name, ",", $c->farend->device->name, "\n" 
	        if ($c->farend && $c->farend->device && $c->farend->device->name);
	    if ($c->connectionid){
		print $prefix, ": Entity: ", $c->connectionid->entity->name, "\n" if ($c->connectionid->entity);
		if ( (my $n = $c->connectionid->nearend) != 0){
		   print $prefix, ": Origin: ", $n->name, "\n"; 
		   print $prefix, ": Origin: ", $n->street1, "\n"; 
		   print $prefix, ": Origin: ", $n->city, "\n"; 
		}
		map { $contacts{$_->id} = $_ } $c->connectionid->entity->contactlist->contacts 
		     if ($c->connectionid && $c->connectionid->entity && $c->connectionid->entity->contactlist);
		if ((my $f = $c->connectionid->farend) != 0){
		   map { $contacts{$_->id} = $_ } $f->contactlist->contacts if ($f->contactlist);
		   print $prefix, ": Destination: ", $f->name, "\n"; 
		   print $prefix, ": Destination: ", $f->street1, "\n"; 
		   print $prefix, ": Destination: ", $f->city, "\n"; 
		}
	    }
	    foreach my $contact ( sort { $a->person->lastname cmp $b->person->lastname } 
	    	                  map { $contacts{$_} } keys %contacts ){
		my $person = $contact->person;
		my $pr = $prefix . ": Contacts : " . $person->firstname . " " . $person->lastname;
	    	print $pr, ": Role: ", $contact->contacttype->name, "\n" if ($contact->contacttype);
	    	print $pr, ": Position: ", $person->position, "\n" if ($person->position);
	    	print $pr, ": Office: ", $person->office, "\n" if ($person->office);
	    	print $pr, ": Email: <", $person->email, ">\n" if ($person->email);
	    	print $pr, ": Cell: ", $person->cell, "\n" if ($person->cell);
	    	print $pr, ": Pager: ", $person->pager, "\n" if ($person->pager);
	    	print $pr, ": Email-Pager: ", $person->emailpager, "\n" if ($person->emailpager);
	   }
	   foreach my $l (@comments){
              print $prefix, " Comments: ", $l, "\n";
	   }
	   print "\n";
    }

    close (FILE);
}
