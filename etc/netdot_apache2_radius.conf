# NOTE: THIS CONFIGURATION IS FOR APACHE 2 ONLY.
#
# Modify this to your liking and include it in httpd.conf.
# -----------------------------------------------------------------------------

PerlModule Apache2::compat
PerlModule ModPerl::Util
#PerlModule Apache2::Request
PerlModule Apache2::RequestRec
PerlModule Apache2::RequestIO
PerlModule Apache2::RequestUtil
PerlModule Apache2::ServerUtil
PerlModule Apache2::Connection
PerlModule Apache2::Log
PerlModule CGI
PerlModule CGI::Cookie
PerlModule Apache::Session
PerlModule APR::Table
PerlModule ModPerl::Registry
PerlModule "Apache2::Const -compile => ':common'"
PerlModule "APR::Const -compile => ':common'"

PerlModule Apache2::SiteControl::AccessController
PerlModule HTML::Mason::ApacheHandler

PerlSetVar MasonArgsMethod CGI
PerlModule Apache::DBI

PerlRequire /usr/local/netdot/bin/mason.pl

Alias /netdot/ "/usr/local/netdot/htdocs/"

<Location /netdot/>
   SetHandler perl-script
   PerlHandler Netdot::Mason

   Order Deny,Allow
   Allow from all

   # Set up the method of credential verification. See
   # SiteControl::AccessController for help on making your own.
   PerlSetVar Apache2::SiteControlMethod Apache2::SiteControl::Radius


   # Turn on debugging
   PerlSetVar AccessControllerDebug 9
   PerlSetVar AuthCookieDebug 9

   # Configure the factories. See SiteControl::UserFactory and
   # SiteControl::ManagerFactory
   PerlSetVar AccessControllerManagerFactory Netdot::NetdotPermissionFactory

   # Configure the location of the session data on server disks
   # NOTE: apache should have read/write access to these locations. 
   PerlSetVar AccessControllerSessions /tmp/sessions
   PerlSetVar AccessControllerLocks /tmp/sessions/locks

   # Tell mod_perl that you want this module to control access:
   PerlAuthenHandler Apache2::SiteControl::AccessController->authenticate
   PerlAuthzHandler Apache2::SiteControl::AccessController->authorize


   # Choose a name for the instance of the authenticator. This name is
   # used as part of the remaining variable names.
   PerlSetVar AuthName netdot 

   # Set the path that will be protected
   PerlSetVar netdotPath /netdot

   # Indicate the path to the login page. Be careful, HTML::Mason can 
   # interfere with proper handling...make sure you know your dependencies.
   # See samples and Apache::AuthCookie for more information.
   PerlSetVar netdotLoginScript /netdot/login.html

   # See Apache::AuthCookie for descriptions of these.
   PerlSetVar netdotSatisfy All
   PerlSetVar netdotDomain myhost.mydomain.com
   PerlSetVar netdotCache 1
   PerlSetVar netdotExpires +2h

</Location>

<FilesMatch "login\.html$">
  AuthType Apache2::SiteControl::AccessController
  AuthName netdot
  SetHandler perl-script

  PerlHandler ModPerl::Registry

  PerlSetVar AccessControllerDebug 9
  PerlSetVar AuthCookieDebug 9
  PerlSetVar RadiusAccessControllerHost "localhost"
  PerlSetVar RadiusAccessControllerSecret "testing123"
  Options +ExecCGI
</FilesMatch>

<FilesMatch "\.m?html$">
    SetHandler perl-script
    PerlHandler Netdot::Mason
    AuthType Apache2::SiteControl::AccessController
    AuthName netdot
    require valid-user
</FilesMatch>

<Location /NetdotLogin>
   AuthType Apache2::SiteControl::AccessController
   AuthName netdot 
   SetHandler perl-script
   PerlHandler Apache2::SiteControl::AccessController->login
   PerlSetVar AccessControllerDebug 9
   PerlSetVar AuthCookieDebug 9
   PerlSetVar netdotLoginScript /netdot/login.html
   PerlSetVar RadiusAccessControllerHost "localhost"
   PerlSetVar RadiusAccessControllerSecret "testing123"
   PerlSetVar AccessControllerSessions /tmp/sessions
   PerlSetVar AccessControllerLocks /tmp/sessions/locks
</Location>
